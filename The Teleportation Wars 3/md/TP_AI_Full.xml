<?xml version="1.0" encoding="utf-8" ?>
<mdscript name="TP_AI_Full" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="D:/x4 extract 2.5b1/libraries/md.xsd">
    <cues>
        <!-- 
        
       
        math scale
        
        test spread 

        check for being an idiot with remove value
        
        test step after attack order

        fleethop not adding ships or tag or something
        
        test timer shouldnt work

        spread patrol

        
       
        
        no ships in zone is disrupted by removal of old entries 
       removal of old or used table entries
        


        
        add corrected resources for equipment wares (probably the cause of broken god station bug)

        

        
         -->
        <cue name="Init_AI" instantiate="true">
            <conditions>
                <event_cue_signalled cue="md.Setup.GameStart" />
            </conditions>
            <actions>
                <!-- find -->
                <!-- sector -->
                <find_sector groupname="$TP_Sectors" space="player.galaxy" multiple="true">
                    <match macro="macro.cluster_black2_sector01_macro" negate="true" />
                </find_sector>
                <find_sector groupname="$TP_Sectors_Argon" space="player.galaxy" multiple="true" owner="faction.argon" />
                <find_sector groupname="$TP_Sectors_Teladi" space="player.galaxy" multiple="true" owner="faction.teladi" />
                <find_sector groupname="$TP_Sectors_Paranid" space="player.galaxy" multiple="true" owner="faction.paranid" />
                <find_sector groupname="$TP_Sectors_antigone" space="player.galaxy" multiple="true" owner="faction.antigone" />
                <!-- <find_sector groupname="$TP_Sectors_ministry" space="player.galaxy" multiple="true" owner="faction.teladi" /> -->
                <find_sector groupname="$TP_Sectors_holyorder" space="player.galaxy" multiple="true" owner="faction.holyorder" />
                <find_sector groupname="$TP_Sectors_Ownerless" space="player.galaxy" multiple="true" owner="faction.ownerless">
                    <match macro="macro.cluster_black2_sector01_macro" negate="true" />
                </find_sector>
                <find_sector groupname="$TP_Sectors_FactionSpace" space="player.galaxy" multiple="true" owner="[faction.argon, faction.teladi, faction.paranid, faction.antigone, faction.holyorder]" />
                <!-- station -->
                <find_station groupname="$TP_All_Stations" space="player.galaxy" multiple="true"></find_station>
                <find_station groupname="$XenonAssets" space="player.galaxy" multiple="true" owner="faction.xenon"></find_station>
                <!-- ship -->
                <find_ship groupname="$TP_All_Ships" space="player.galaxy" multiple="true"></find_ship>
                <!-- group -->
                <create_group groupname="$ShipSpawned" />
                <create_group groupname="$PatrollingShips" />
                <create_group groupname="$SpawnedFactoriesGroup" />
                <create_group groupname="$TeleportationBeacons" />
                <create_group groupname="$JumpBeacons" />
                <create_group groupname="$TeleportationStations" />
                <create_group groupname="$XenonInvasionStations" />
                <create_group groupname="$SpawnedStationGroup" />
                <set_value name="$StationTargeted" exact="null" />
                <create_group groupname="$XenonPatrolSpawns" />
                <create_group groupname="$SpawnedShipGroup" />
                <create_group groupname="$XenonInvasionSpawns" />
                <create_group groupname="$TP_Spanwned_Ships" />
                <create_group groupname="$TRS_Stable" />
                <create_group groupname="$TRS_Unstable" />
                <create_group groupname="$Tradestations" />
                <create_group groupname="$Shipyards" />
                <create_group groupname="$Wharfs" />
                <create_group groupname="$Equipmentdocks" />
                <create_group groupname="$WARE_Stations" />
                <create_group groupname="$TRS_Stations" />
                <create_group groupname="$FleetTargetGroup" />
                <create_group groupname="$XenonAssets" />
                <create_group groupname="$StationWeXenoned" />
                <!-- merc -->
                <create_group groupname="$ContractShips" />
                <create_group groupname="$ContractPilots" />
                <!-- modules -->
                <create_list name="$Prod" />
                <create_list name="$Con" />
                <create_list name="$Stor" />
                <!-- <get_module_definition tags="[tag.production]" faction="faction.argon" macro="$Resultprod" multiple="true" />
                <get_module_definition tags="[tag.connection]" faction="faction.argon" macro="$Resultcon" multiple="true" />
                <get_module_definition tags="[tag.storage]" faction="faction.argon" macro="$Resultstorage" multiple="true" /> -->
                <!-- make a faction for all the tradwares? -->
                <!-- <get_ware_definition faction="faction.argon" result="$AllWares" /> -->
                <!-- tables -->
                <set_value name="$KnownSectorTable" exact="table[]" />
                <set_value name="$FleetTable" exact="table[]" />
                <!-- salvage -->
                <set_value name="$MarkedWrecksTable" exact="table[]" />
                <create_list name="$LocalMenu" />
                <create_list name="$ActiveKeys" />
                <create_group groupname="$Salvagers" />
                <!-- xenonai -->
                <set_value name="$ForcePool" exact="50" />
                <set_value name="$OldForcePool" exact="0" />
                <set_value name="$ConstantFleetHop" exact="2f" />
                <set_value name="$ConstantPlayerAttack" exact="1f" />
                <set_value name="$ConstantInvasion" exact="10f" />
                <set_value name="$BeaconRate" exact="2f" />
                <!--******************************VALUES*******************************  -->
                <set_value name="$PatrolPool" exact="0" />
                <set_value name="$PHQ" exact="1f" />
                <set_value name="$Time" exact="(player.age)f + 20" />
                <set_value name="$DeltaTime" exact="$Time" />
                <!--******************************CALC VALUES*******************************  -->
                <set_value name="$FleetHop" exact="2" />
                <set_value name="$Invasion" exact="2" />
                <set_value name="$PlayerAttack" exact="2" />
                <set_value name="$Piratehop" exact="2" />
                <set_value name="$XenonForce" exact="2" />
                <set_value name="$XenonSuccess" exact="2f" />
                <set_value name="$PlayerSuccess" exact="1f" />
                <create_list name="$HistoricForcepool" />
                <!--  ******************************xenonactions*******************************   -->
                <set_value name="$FleetHopSelected" exact="false" />
                <set_value name="$InvasionSelected" exact="false" />
                <set_value name="$InvasionStart" exact="false" />
                <set_value name="$InvasionStations" exact="0" />
                <!--  ******************************spawn*******************************   -->
                <set_value name="$MediumSearchComplete" exact="false" />
                <set_value name="$SearchComplete" exact="false" />
                <set_value name="$LargeSearchComplete" exact="false" />
                <!--  ******************************flags and values*******************************   -->
                <set_value name="$BeaconSelected" exact="false" />
                <set_value name="$HowManyToSpawn" exact="false" />
                <set_value name="$PatrolActivated" exact="false" />
                <set_value name="$FleetHopActivated" exact="false" />
                <set_value name="$PlayerAttackActivated" exact="false" />
                <set_value name="$PirateHopActivated" exact="false" />
                <set_value name="$InvasionActivated" exact="false" />
                <set_value name="$HowManyToSpawn" exact="false" />
                <set_value name="$STDTimer" exact="0" />
                <set_value name="$XStationDestroyed" exact="0" />
                <!--  ******************************EQWARES*******************************   -->
                <create_list name="$missilewares" />
                <append_to_list name="$missilewares" exact="ware.tpwar_missile_cluster_heavy_mk1" />
                <append_to_list name="$missilewares" exact="ware.tpwar_missile_cluster_light_mk1" />
                <append_to_list name="$missilewares" exact="ware.tpwar_missile_dumbfire_heavy_mk1" />
                <append_to_list name="$missilewares" exact="ware.tpwar_missile_dumbfire_heavy_mk2" />
                <append_to_list name="$missilewares" exact="ware.tpwar_missile_dumbfire_light_mk1" />
                <append_to_list name="$missilewares" exact="ware.tpwar_missile_dumbfire_light_mk2" />
                <append_to_list name="$missilewares" exact="ware.tpwar_missile_emp_mk1" />
                <append_to_list name="$missilewares" exact="ware.tpwar_missile_guided_heavy_mk1" />
                <append_to_list name="$missilewares" exact="ware.tpwar_missile_guided_light_mk1" />
                <append_to_list name="$missilewares" exact="ware.tpwar_missile_heatseeker_heavy_mk1" />
                <append_to_list name="$missilewares" exact="ware.tpwar_missile_heatseeker_light_mk1" />
                <append_to_list name="$missilewares" exact="ware.tpwar_missile_smart_heavy_mk1" />
                <append_to_list name="$missilewares" exact="ware.tpwar_missile_smart_light_mk1" />
                <append_to_list name="$missilewares" exact="ware.tpwar_missile_swarm_heavy_mk1" />
                <append_to_list name="$missilewares" exact="ware.tpwar_missile_swarm_light_mk1" />
                <append_to_list name="$missilewares" exact="ware.tpwar_missile_torpedo_heavy_mk1" />
                <append_to_list name="$missilewares" exact="ware.tpwar_missile_torpedo_light_mk1" />
                <!-- shieldwares -->
                <create_list name="$shieldwares" />
                <append_to_list name="$shieldwares" exact="ware.tpwar_shield_arg_l_standard_01_mk1" />
                <append_to_list name="$shieldwares" exact="ware.tpwar_shield_arg_l_standard_01_mk2" />
                <append_to_list name="$shieldwares" exact="ware.tpwar_shield_arg_m_standard_02_mk1" />
                <append_to_list name="$shieldwares" exact="ware.tpwar_shield_arg_m_standard_02_mk2" />
                <append_to_list name="$shieldwares" exact="ware.tpwar_shield_arg_s_standard_01_mk1" />
                <append_to_list name="$shieldwares" exact="ware.tpwar_shield_arg_s_standard_01_mk2" />
                <append_to_list name="$shieldwares" exact="ware.tpwar_shield_arg_s_standard_01_mk3" />
                <append_to_list name="$shieldwares" exact="ware.tpwar_shield_arg_xl_standard_01_mk1" />
                <append_to_list name="$shieldwares" exact="ware.tpwar_shield_par_l_standard_01_mk1" />
                <append_to_list name="$shieldwares" exact="ware.tpwar_shield_par_l_standard_01_mk2" />
                <append_to_list name="$shieldwares" exact="ware.tpwar_shield_par_m_standard_02_mk1" />
                <append_to_list name="$shieldwares" exact="ware.tpwar_shield_par_m_standard_02_mk2" />
                <append_to_list name="$shieldwares" exact="ware.tpwar_shield_par_s_standard_01_mk1" />
                <append_to_list name="$shieldwares" exact="ware.tpwar_shield_par_s_standard_01_mk2" />
                <append_to_list name="$shieldwares" exact="ware.tpwar_shield_par_s_standard_01_mk3" />
                <append_to_list name="$shieldwares" exact="ware.tpwar_shield_par_xl_standard_01_mk1" />
                <append_to_list name="$shieldwares" exact="ware.tpwar_shield_tel_l_standard_01_mk1" />
                <append_to_list name="$shieldwares" exact="ware.tpwar_shield_tel_l_standard_01_mk2" />
                <append_to_list name="$shieldwares" exact="ware.tpwar_shield_tel_m_standard_02_mk1" />
                <append_to_list name="$shieldwares" exact="ware.tpwar_shield_tel_m_standard_02_mk2" />
                <append_to_list name="$shieldwares" exact="ware.tpwar_shield_tel_s_standard_01_mk1" />
                <append_to_list name="$shieldwares" exact="ware.tpwar_shield_tel_s_standard_01_mk2" />
                <append_to_list name="$shieldwares" exact="ware.tpwar_shield_tel_s_standard_01_mk3" />
                <append_to_list name="$shieldwares" exact="ware.tpwar_shield_tel_xl_standard_01_mk1" />
                <!-- enginewares -->
                <create_list name="$enginewares" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_arg_l_allround_01_mk1" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_arg_l_travel_01_mk1" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_arg_m_allround_01_mk1" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_arg_m_allround_01_mk2" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_arg_m_allround_01_mk3" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_arg_m_combat_01_mk1" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_arg_m_combat_01_mk2" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_arg_m_combat_01_mk3" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_arg_m_travel_01_mk1" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_arg_m_travel_01_mk2" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_arg_m_travel_01_mk3" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_arg_s_allround_01_mk1" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_arg_s_allround_01_mk2" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_arg_s_allround_01_mk3" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_arg_s_combat_01_mk1" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_arg_s_combat_01_mk2" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_arg_s_combat_01_mk3" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_arg_s_travel_01_mk1" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_arg_s_travel_01_mk2" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_arg_s_travel_01_mk3" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_arg_xl_allround_01_mk1" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_arg_xl_travel_01_mk1" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_par_l_allround_01_mk1" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_par_l_travel_01_mk1" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_par_m_allround_01_mk1" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_par_m_allround_01_mk2" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_par_m_allround_01_mk3" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_par_m_combat_01_mk1" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_par_m_combat_01_mk2" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_par_m_combat_01_mk3" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_par_m_travel_01_mk1" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_par_m_travel_01_mk2" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_par_m_travel_01_mk3" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_par_s_allround_01_mk1" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_par_s_allround_01_mk2" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_par_s_allround_01_mk3" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_par_s_combat_01_mk1" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_par_s_combat_01_mk2" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_par_s_combat_01_mk3" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_par_s_travel_01_mk1" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_par_s_travel_01_mk2" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_par_s_travel_01_mk3" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_par_xl_allround_01_mk1" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_par_xl_travel_01_mk1" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_tel_l_allround_01_mk1" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_tel_l_travel_01_mk1" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_tel_m_allround_01_mk1" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_tel_m_allround_01_mk2" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_tel_m_allround_01_mk3" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_tel_m_combat_01_mk1" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_tel_m_combat_01_mk2" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_tel_m_combat_01_mk3" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_tel_m_travel_01_mk1" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_tel_m_travel_01_mk2" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_tel_m_travel_01_mk3" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_tel_s_allround_01_mk1" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_tel_s_allround_01_mk2" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_tel_s_allround_01_mk3" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_tel_s_combat_01_mk1" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_tel_s_combat_01_mk2" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_tel_s_combat_01_mk3" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_tel_s_travel_01_mk1" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_tel_s_travel_01_mk2" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_tel_s_travel_01_mk3" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_tel_xl_allround_01_mk1" />
                <append_to_list name="$enginewares" exact="ware.tpwar_engine_tel_xl_travel_01_mk1" />
                <!-- deployablewares -->
                <create_list name="$deployablewares" />
                <append_to_list name="$deployablewares" exact="ware.tpwar_resourceprobe_01" />
                <append_to_list name="$deployablewares" exact="ware.tpwar_satellite_mk1" />
                <append_to_list name="$deployablewares" exact="ware.tpwar_satellite_mk2" />
                <!-- dronewares -->
                <create_list name="$dronewares" />
                <append_to_list name="$dronewares" exact="ware.tpwar_ship_gen_s_fightingdrone_01_a" />
                <append_to_list name="$dronewares" exact="ware.tpwar_ship_gen_s_lasertower_01_a" />
                <append_to_list name="$dronewares" exact="ware.tpwar_ship_gen_s_miningdrone_liquid_01_a" />
                <append_to_list name="$dronewares" exact="ware.tpwar_ship_gen_s_miningdrone_solid_01_a" />
                <append_to_list name="$dronewares" exact="ware.tpwar_ship_gen_xs_buildingdrone_01_a" />
                <append_to_list name="$dronewares" exact="ware.tpwar_ship_gen_xs_cargodrone_empty_01_a" />
                <append_to_list name="$dronewares" exact="ware.tpwar_ship_gen_xs_lasertower_01_a" />
                <append_to_list name="$dronewares" exact="ware.tpwar_ship_gen_xs_repairdrone_01_a" />
                <!-- thrusterwares -->
                <create_list name="$thrusterwares" />
                <append_to_list name="$thrusterwares" exact="ware.tpwar_thruster_gen_l_allround_01_mk1" />
                <append_to_list name="$thrusterwares" exact="ware.tpwar_thruster_gen_l_allround_01_mk2" />
                <append_to_list name="$thrusterwares" exact="ware.tpwar_thruster_gen_l_allround_01_mk3" />
                <append_to_list name="$thrusterwares" exact="ware.tpwar_thruster_gen_m_allround_01_mk1" />
                <append_to_list name="$thrusterwares" exact="ware.tpwar_thruster_gen_m_allround_01_mk2" />
                <append_to_list name="$thrusterwares" exact="ware.tpwar_thruster_gen_m_allround_01_mk3" />
                <append_to_list name="$thrusterwares" exact="ware.tpwar_thruster_gen_m_combat_01_mk1" />
                <append_to_list name="$thrusterwares" exact="ware.tpwar_thruster_gen_m_combat_01_mk2" />
                <append_to_list name="$thrusterwares" exact="ware.tpwar_thruster_gen_m_combat_01_mk3" />
                <append_to_list name="$thrusterwares" exact="ware.tpwar_thruster_gen_s_allround_01_mk1" />
                <append_to_list name="$thrusterwares" exact="ware.tpwar_thruster_gen_s_allround_01_mk2" />
                <append_to_list name="$thrusterwares" exact="ware.tpwar_thruster_gen_s_allround_01_mk3" />
                <append_to_list name="$thrusterwares" exact="ware.tpwar_thruster_gen_s_combat_01_mk1" />
                <append_to_list name="$thrusterwares" exact="ware.tpwar_thruster_gen_s_combat_01_mk2" />
                <append_to_list name="$thrusterwares" exact="ware.tpwar_thruster_gen_s_combat_01_mk3" />
                <append_to_list name="$thrusterwares" exact="ware.tpwar_thruster_gen_xl_allround_01_mk1" />
                <append_to_list name="$thrusterwares" exact="ware.tpwar_thruster_gen_xl_allround_01_mk2" />
                <append_to_list name="$thrusterwares" exact="ware.tpwar_thruster_gen_xl_allround_01_mk3" />
                <!-- turretwares -->
                <create_list name="$turretwares" />
                <append_to_list name="$turretwares" exact="ware.tpwar_turret_arg_l_beam_01_mk1" />
                <append_to_list name="$turretwares" exact="ware.tpwar_turret_arg_l_dumbfire_01_mk1" />
                <append_to_list name="$turretwares" exact="ware.tpwar_turret_arg_l_guided_01_mk1" />
                <append_to_list name="$turretwares" exact="ware.tpwar_turret_arg_l_laser_01_mk1" />
                <append_to_list name="$turretwares" exact="ware.tpwar_turret_arg_l_mining_01_mk1" />
                <append_to_list name="$turretwares" exact="ware.tpwar_turret_arg_l_plasma_01_mk1" />
                <append_to_list name="$turretwares" exact="ware.tpwar_turret_arg_m_beam_02_mk1" />
                <append_to_list name="$turretwares" exact="ware.tpwar_turret_arg_m_dumbfire_02_mk1" />
                <append_to_list name="$turretwares" exact="ware.tpwar_turret_arg_m_gatling_02_mk1" />
                <append_to_list name="$turretwares" exact="ware.tpwar_turret_arg_m_guided_02_mk1" />
                <append_to_list name="$turretwares" exact="ware.tpwar_turret_arg_m_laser_02_mk1" />
                <append_to_list name="$turretwares" exact="ware.tpwar_turret_arg_m_mining_02_mk1" />
                <append_to_list name="$turretwares" exact="ware.tpwar_turret_arg_m_plasma_02_mk1" />
                <append_to_list name="$turretwares" exact="ware.tpwar_turret_arg_m_shotgun_02_mk1" />
                <append_to_list name="$turretwares" exact="ware.tpwar_turret_par_l_beam_01_mk1" />
                <append_to_list name="$turretwares" exact="ware.tpwar_turret_par_l_dumbfire_01_mk1" />
                <append_to_list name="$turretwares" exact="ware.tpwar_turret_par_l_guided_01_mk1" />
                <append_to_list name="$turretwares" exact="ware.tpwar_turret_par_l_laser_01_mk1" />
                <append_to_list name="$turretwares" exact="ware.tpwar_turret_par_l_mining_01_mk1" />
                <append_to_list name="$turretwares" exact="ware.tpwar_turret_par_l_plasma_01_mk1" />
                <append_to_list name="$turretwares" exact="ware.tpwar_turret_par_m_beam_02_mk1" />
                <append_to_list name="$turretwares" exact="ware.tpwar_turret_par_m_dumbfire_02_mk1" />
                <append_to_list name="$turretwares" exact="ware.tpwar_turret_par_m_gatling_02_mk1" />
                <append_to_list name="$turretwares" exact="ware.tpwar_turret_par_m_guided_02_mk1" />
                <append_to_list name="$turretwares" exact="ware.tpwar_turret_par_m_laser_02_mk1" />
                <append_to_list name="$turretwares" exact="ware.tpwar_turret_par_m_mining_02_mk1" />
                <append_to_list name="$turretwares" exact="ware.tpwar_turret_par_m_plasma_02_mk1" />
                <append_to_list name="$turretwares" exact="ware.tpwar_turret_par_m_shotgun_02_mk1" />
                <append_to_list name="$turretwares" exact="ware.tpwar_turret_tel_l_beam_01_mk1" />
                <append_to_list name="$turretwares" exact="ware.tpwar_turret_tel_l_dumbfire_01_mk1" />
                <append_to_list name="$turretwares" exact="ware.tpwar_turret_tel_l_guided_01_mk1" />
                <append_to_list name="$turretwares" exact="ware.tpwar_turret_tel_l_laser_01_mk1" />
                <append_to_list name="$turretwares" exact="ware.tpwar_turret_tel_l_mining_01_mk1" />
                <append_to_list name="$turretwares" exact="ware.tpwar_turret_tel_l_plasma_01_mk1" />
                <append_to_list name="$turretwares" exact="ware.tpwar_turret_tel_m_beam_02_mk1" />
                <append_to_list name="$turretwares" exact="ware.tpwar_turret_tel_m_gatling_02_mk1" />
                <append_to_list name="$turretwares" exact="ware.tpwar_turret_tel_m_guided_02_mk1" />
                <append_to_list name="$turretwares" exact="ware.tpwar_turret_tel_m_guided_02_mk1" />
                <append_to_list name="$turretwares" exact="ware.tpwar_turret_tel_m_guided_02_mk1" />
                <append_to_list name="$turretwares" exact="ware.tpwar_turret_tel_m_laser_02_mk1" />
                <append_to_list name="$turretwares" exact="ware.tpwar_turret_tel_m_mining_02_mk1" />
                <append_to_list name="$turretwares" exact="ware.tpwar_turret_tel_m_plasma_02_mk1" />
                <append_to_list name="$turretwares" exact="ware.tpwar_turret_tel_m_shotgun_02_mk1" />
                <!-- weaponwares -->
                <create_list name="$weaponwares" />
                <append_to_list name="$weaponwares" exact="ware.tpwar_weapon_arg_l_destroyer_01_mk1" />
                <append_to_list name="$weaponwares" exact="ware.tpwar_weapon_arg_m_ion_01_mk1" />
                <append_to_list name="$weaponwares" exact="ware.tpwar_weapon_arg_m_ion_01_mk2" />
                <append_to_list name="$weaponwares" exact="ware.tpwar_weapon_arg_s_ion_01_mk1" />
                <append_to_list name="$weaponwares" exact="ware.tpwar_weapon_arg_s_ion_01_mk2" />
                <append_to_list name="$weaponwares" exact="ware.tpwar_weapon_gen_mine_01" />
                <append_to_list name="$weaponwares" exact="ware.tpwar_weapon_gen_mine_03" />
                <append_to_list name="$weaponwares" exact="ware.tpwar_weapon_gen_m_beam_01_mk1" />
                <append_to_list name="$weaponwares" exact="ware.tpwar_weapon_gen_m_beam_01_mk2" />
                <append_to_list name="$weaponwares" exact="ware.tpwar_weapon_gen_m_dumbfire_01_mk1" />
                <append_to_list name="$weaponwares" exact="ware.tpwar_weapon_gen_m_dumbfire_01_mk2" />
                <append_to_list name="$weaponwares" exact="ware.tpwar_weapon_gen_m_gatling_01_mk1" />
                <append_to_list name="$weaponwares" exact="ware.tpwar_weapon_gen_m_gatling_01_mk2" />
                <append_to_list name="$weaponwares" exact="ware.tpwar_weapon_gen_m_guided_01_mk1" />
                <append_to_list name="$weaponwares" exact="ware.tpwar_weapon_gen_m_guided_01_mk2" />
                <append_to_list name="$weaponwares" exact="ware.tpwar_weapon_gen_m_laser_01_mk1" />
                <append_to_list name="$weaponwares" exact="ware.tpwar_weapon_gen_m_laser_01_mk2" />
                <append_to_list name="$weaponwares" exact="ware.tpwar_weapon_gen_m_mining_01_mk1" />
                <append_to_list name="$weaponwares" exact="ware.tpwar_weapon_gen_m_mining_01_mk2" />
                <append_to_list name="$weaponwares" exact="ware.tpwar_weapon_gen_m_plasma_01_mk1" />
                <append_to_list name="$weaponwares" exact="ware.tpwar_weapon_gen_m_plasma_01_mk2" />
                <append_to_list name="$weaponwares" exact="ware.tpwar_weapon_gen_m_shotgun_01_mk1" />
                <append_to_list name="$weaponwares" exact="ware.tpwar_weapon_gen_m_shotgun_01_mk2" />
                <append_to_list name="$weaponwares" exact="ware.tpwar_weapon_gen_m_torpedo_01_mk1" />
                <append_to_list name="$weaponwares" exact="ware.tpwar_weapon_gen_m_torpedo_01_mk2" />
                <append_to_list name="$weaponwares" exact="ware.tpwar_weapon_gen_s_beam_01_mk1" />
                <append_to_list name="$weaponwares" exact="ware.tpwar_weapon_gen_s_beam_01_mk2" />
                <append_to_list name="$weaponwares" exact="ware.tpwar_weapon_gen_s_dumbfire_01_mk1" />
                <append_to_list name="$weaponwares" exact="ware.tpwar_weapon_gen_s_dumbfire_01_mk2" />
                <append_to_list name="$weaponwares" exact="ware.tpwar_weapon_gen_s_gatling_01_mk1" />
                <append_to_list name="$weaponwares" exact="ware.tpwar_weapon_gen_s_gatling_01_mk2" />
                <append_to_list name="$weaponwares" exact="ware.tpwar_weapon_gen_s_guided_01_mk1" />
                <append_to_list name="$weaponwares" exact="ware.tpwar_weapon_gen_s_guided_01_mk2" />
                <append_to_list name="$weaponwares" exact="ware.tpwar_weapon_gen_s_laser_01_mk1" />
                <append_to_list name="$weaponwares" exact="ware.tpwar_weapon_gen_s_laser_01_mk2" />
                <append_to_list name="$weaponwares" exact="ware.tpwar_weapon_gen_s_mining_01_mk1" />
                <append_to_list name="$weaponwares" exact="ware.tpwar_weapon_gen_s_mining_01_mk2" />
                <append_to_list name="$weaponwares" exact="ware.tpwar_weapon_gen_s_plasma_01_mk1" />
                <append_to_list name="$weaponwares" exact="ware.tpwar_weapon_gen_s_plasma_01_mk2" />
                <append_to_list name="$weaponwares" exact="ware.tpwar_weapon_gen_s_shotgun_01_mk1" />
                <append_to_list name="$weaponwares" exact="ware.tpwar_weapon_gen_s_shotgun_01_mk2" />
                <append_to_list name="$weaponwares" exact="ware.tpwar_weapon_gen_s_torpedo_01_mk1" />
                <append_to_list name="$weaponwares" exact="ware.tpwar_weapon_gen_s_torpedo_01_mk2" />
                <append_to_list name="$weaponwares" exact="ware.tpwar_weapon_par_l_destroyer_01_mk1" />
                <append_to_list name="$weaponwares" exact="ware.tpwar_weapon_par_m_railgun_01_mk1" />
                <append_to_list name="$weaponwares" exact="ware.tpwar_weapon_par_m_railgun_01_mk2" />
                <append_to_list name="$weaponwares" exact="ware.tpwar_weapon_par_s_railgun_01_mk1" />
                <append_to_list name="$weaponwares" exact="ware.tpwar_weapon_par_s_railgun_01_mk2" />
                <append_to_list name="$weaponwares" exact="ware.tpwar_weapon_tel_l_destroyer_01_mk1" />
                <append_to_list name="$weaponwares" exact="ware.tpwar_weapon_tel_m_charge_01_mk1" />
                <append_to_list name="$weaponwares" exact="ware.tpwar_weapon_tel_m_charge_01_mk2" />
                <append_to_list name="$weaponwares" exact="ware.tpwar_weapon_tel_s_charge_01_mk1" />
                <append_to_list name="$weaponwares" exact="ware.tpwar_weapon_tel_s_charge_01_mk2" />
                <create_list name="$TP_Wares" />
                <do_all exact="$weaponwares.count" counter="$addweaponwares">
                    <append_to_list name="$TP_Wares" exact="$weaponwares.{$addweaponwares}" />
                </do_all>
                <do_all exact="$turretwares.count" counter="$addturretwares">
                    <append_to_list name="$TP_Wares" exact="$turretwares.{$addturretwares}" />
                </do_all>
                <do_all exact="$thrusterwares.count" counter="$addthrusterwares">
                    <append_to_list name="$TP_Wares" exact="$thrusterwares.{$addthrusterwares}" />
                </do_all>
                <do_all exact="$dronewares.count" counter="$adddronewares">
                    <append_to_list name="$TP_Wares" exact="$dronewares.{$adddronewares}" />
                </do_all>
                <do_all exact="$deployablewares.count" counter="$adddeployablewares">
                    <append_to_list name="$TP_Wares" exact="$deployablewares.{$adddeployablewares}" />
                </do_all>
                <do_all exact="$enginewares.count" counter="$addenginewares">
                    <append_to_list name="$TP_Wares" exact="$enginewares.{$addenginewares}" />
                </do_all>
                <do_all exact="$shieldwares.count" counter="$addshieldwares">
                    <append_to_list name="$TP_Wares" exact="$shieldwares.{$addshieldwares}" />
                </do_all>
                <do_all exact="$missilewares.count" counter="$addmissilewares">
                    <append_to_list name="$TP_Wares" exact="$missilewares.{$addmissilewares}" />
                </do_all>
                <debug_to_file text="'tpwares' + $TP_Wares.count" name="'warecheck.log'" />
                <!--  ******************************ECONWARES*******************************   -->
                <create_list name="$EconWareLow" />
                <create_list name="$EconWareMed" />
                <create_list name="$EconWareHigh" />
                <append_to_list name="$EconWareLow" exact="ware.energycells" />
                <append_to_list name="$EconWareLow" exact="ware.foodrations" />
                <append_to_list name="$EconWareLow" exact="ware.graphene" />
                <append_to_list name="$EconWareLow" exact="ware.helium" />
                <append_to_list name="$EconWareLow" exact="ware.hullparts" />
                <append_to_list name="$EconWareLow" exact="ware.hydrogen" />
                <append_to_list name="$EconWareLow" exact="ware.ice" />
                <append_to_list name="$EconWareLow" exact="ware.majadust" />
                <append_to_list name="$EconWareLow" exact="ware.majasnails" />
                <append_to_list name="$EconWareLow" exact="ware.meat" />
                <append_to_list name="$EconWareLow" exact="ware.medicalsupplies" />
                <append_to_list name="$EconWareLow" exact="ware.methane" />
                <append_to_list name="$EconWareLow" exact="ware.nostropoil" />
                <append_to_list name="$EconWareLow" exact="ware.ore" />
                <append_to_list name="$EconWareLow" exact="ware.silicon" />
                <append_to_list name="$EconWareLow" exact="ware.siliconwafers" />
                <append_to_list name="$EconWareLow" exact="ware.sojabeans" />
                <append_to_list name="$EconWareLow" exact="ware.sojahusk" />
                <append_to_list name="$EconWareLow" exact="ware.spacefuel" />
                <append_to_list name="$EconWareLow" exact="ware.spaceweed" />
                <append_to_list name="$EconWareLow" exact="ware.spices" />
                <append_to_list name="$EconWareLow" exact="ware.sunriseflowers" />
                <append_to_list name="$EconWareLow" exact="ware.swampplant" />
                <append_to_list name="$EconWareLow" exact="ware.teladianium" />
                <append_to_list name="$EconWareLow" exact="ware.water" />
                <append_to_list name="$EconWareLow" exact="ware.wheat" />
                <append_to_list name="$EconWareMed" exact="ware.dronecomponents" />
                <append_to_list name="$EconWareMed" exact="ware.weaponcomponents" />
                <append_to_list name="$EconWareMed" exact="ware.superfluidcoolant" />
                <append_to_list name="$EconWareMed" exact="ware.smartchips" />
                <append_to_list name="$EconWareMed" exact="ware.plasmaconductors" />
                <append_to_list name="$EconWareMed" exact="ware.quantumtubes" />
                <append_to_list name="$EconWareMed" exact="ware.refinedmetals" />
                <append_to_list name="$EconWareMed" exact="ware.scanningarrays" />
                <append_to_list name="$EconWareMed" exact="ware.advancedcomposites" />
                <append_to_list name="$EconWareMed" exact="ware.shieldcomponents" />
                <append_to_list name="$EconWareMed" exact="ware.missilecomponents" />
                <append_to_list name="$EconWareMed" exact="ware.turretcomponents" />
                <append_to_list name="$EconWareHigh" exact="ware.nividium" />
                <append_to_list name="$EconWareHigh" exact="ware.microchips" />
                <append_to_list name="$EconWareHigh" exact="ware.engineparts" />
                <append_to_list name="$EconWareHigh" exact="ware.fieldcoils" />
                <append_to_list name="$EconWareHigh" exact="ware.claytronics" />
                <append_to_list name="$EconWareHigh" exact="ware.advancedelectronics" />
                <append_to_list name="$EconWareHigh" exact="ware.antimattercells" />
                <append_to_list name="$EconWareHigh" exact="ware.antimatterconverters" />
                <debug_to_file text="'econl' + $EconWareLow.count" name="'warecheck.log'" />
                <debug_to_file text="'econm' + $EconWareMed.count" name="'warecheck.log'" />
                <debug_to_file text="'econh' + $EconWareHigh.count" name="'warecheck.log'" />
            </actions>
            <cues>
                <cue name="TP_Report" instantiate="true" checktime="1min" checkinterval="5min">
                    <actions>
                        <!-- report -->
                        <set_value name="$ReportCount" exact="1" operation="add" />
                        <debug_to_file text="'Report: ' + $ReportCount" name="'TP_Report.log'" />
                        <debug_to_file text="'FleetHop ' + $FleetHop" name="'TP_Report.log'" />
                        <debug_to_file text="'PlayerAttack ' + $PlayerAttack" name="'TP_Report.log'" />
                        <debug_to_file text="'Invasion ' + $Invasion" name="'TP_Report.log'" />
                        <debug_to_file text="'ForcePool ' + $ForcePool" name="'TP_Report.log'" />
                        <append_to_list name="$HistoricForcepool" exact="$ForcePool" />
                        <debug_to_file text="'DeltaTime ' + $DeltaTime" name="'TP_Report.log'" />
                        <debug_to_file text="'Utilization ' + $Utilization" name="'TP_Report.log'" />
                        <debug_to_file text="'Fleet Report '" name="'TP_Report.log'" />
                        <debug_to_file text="'Total Fleets ' + $FleetTable.keys.count" name="'TP_Report.log'" />
                        <do_all exact="$FleetTable.keys.count" counter="$thisfleet">
                            <debug_to_file text="'Active Fleet? ' + $FleetTable.{$thisfleet}.$Active" name="'TP_Report.log'" />
                            <debug_to_file text="'FleetShips ' + $FleetTable.{$thisfleet}.$FleetShips.count" name="'TP_Report.log'" />
                            <debug_to_file text="'INVASION ' + $FleetTable.{$thisfleet}.$Invasion" name="'TP_Report.log'" />
                            <debug_to_file text="'FleetHop ' + $FleetTable.{$thisfleet}.$FleetHop" name="'TP_Report.log'" />
                            <debug_to_file text="'PLAYERATTACK ' + $FleetTable.{$thisfleet}.$PlayerAttack" name="'TP_Report.log'" />
                            <debug_to_file text="'Startime ' + $FleetTable.{$thisfleet}.$Startime" name="'TP_Report.log'" />
                            <!-- shipnames -->
                            <do_all exact="$FleetTable.{$thisfleet}.$FleetShips.count" counter="$ship">
                                <debug_to_file text="'FleetShipNames ' + $FleetTable.{$thisfleet}.$FleetShips.{$ship}.knownname" name="'TP_Report.log'" />
                                <debug_to_file text="'Beacon ' + $FleetTable.{$thisfleet}.$Beacon" name="'TP_Report.log'" />
                                <debug_to_file text="'Active ' + $FleetTable.{$thisfleet}.$Active" name="'TP_Report.log'" />
                                <debug_to_file text="'FleetHop ' + $FleetTable.{$thisfleet}.$FleetHop" name="'TP_Report.log'" />
                                <debug_to_file text="'PirateHop ' + $FleetTable.{$thisfleet}.$PirateHop" name="'TP_Report.log'" />
                                <debug_to_file text="'PlayerAttack ' + $FleetTable.{$thisfleet}.$PlayerAttack" name="'TP_Report.log'" />
                                <debug_to_file text="'Invasion ' + $FleetTable.{$thisfleet}.$Invasion" name="'TP_Report.log'" />
                                <debug_to_file text="'Patrol ' + $FleetTable.{$thisfleet}.$Patrol" name="'TP_Report.log'" />
                                <debug_to_file text="'Startime ' + $FleetTable.{$thisfleet}.$Startime" name="'TP_Report.log'" />
                                <debug_to_file text="'FleetShips ' + $FleetTable.{$thisfleet}.$FleetShips" name="'TP_Report.log'" />
                                <debug_to_file text="'Leader ' + $FleetTable.{$thisfleet}.$Leader" name="'TP_Report.log'" />
                                <debug_to_file text="'AttackTarget ' + $FleetTable.{$thisfleet}.$AttackTarget" name="'TP_Report.log'" />
                            </do_all>
                        </do_all>
                        <!-- beacons -->
                        <debug_to_file text="'Beacon Report ' " name="'TP_Report.log'" />
                        <debug_to_file text="'TeleportationBeacons ' + $TeleportationBeacons.count" name="'TP_Report.log'" />
                        <debug_to_file text="'JumpBeacons ' + $JumpBeacons.count" name="'TP_Report.log'" />
                    </actions>
                </cue>
                <cue name="SpawnInvasionStation" instantiate="true">
                    <conditions>
                        <event_cue_signalled />
                    </conditions>
                    <delay exact="20s" />
                    <actions>
                        <set_value name="$SectorToSpawnIn" exact="$TP_Sectors.random" />
                        <set_value name="$StationMacro" exact="macro.station_arg_tradestation_base_01_macro" />
                        <set_value name="$ConstructionPlan" exact="'arg_tradestation'" />
                        <set_value name="$ConstructionFaction" exact="faction.xenon" />
                        <include_actions ref="SpawnStationLIB" />
                        <remove_value name="$SectorToSpawnIn" />
                        <remove_value name="$StationMacro" />
                        <remove_value name="$ConstructionPlan" />
                        <remove_value name="$ConstructionFaction" />
                        <add_to_group groupname="$TeleportationStations" object="$StationSpawned" />
                        <!-- <set_owner object="$StationSpawned" faction="faction.player" overridenpc="true" /> -->
                        <signal_cue_instantly cue="XenonInvasion" />
                        <debug_to_file text="'INVASTION STATION CUE SIGNALED INVASION '" name="'AIvalue.log'" />
                    </actions>
                </cue>
                <cue name="AI_Force" instantiate="true" checktime="3min" checkinterval="20min">
                    <actions>
                        <set_value name="$DeltaTime" exact="($Time * 1.03f)" operation="add" />
                        <set_value name="$Utilization" exact="$XenonForce / ($XenonForce  + $Time  + $XenonSuccess )" />
                        <!-- calc -->
                        <set_value name="$FleetHop" exact="$ConstantFleetHop * ((( $XenonSuccess/$PlayerSuccess ) * ($BeaconRate * $DeltaTime)) /  $Utilization)" />
                        <set_value name="$PlayerAttack" exact="$ConstantPlayerAttack * ((( $PlayerSuccess/$XenonSuccess ) * ($PHQ * $DeltaTime)) /  $Utilization)" />
                        <set_value name="$Invasion" exact="$ConstantInvasion * ((($XenonSuccess - $Time ) * $Utilization) + $DeltaTime)" />
                        <set_value name="$ForcePool" exact="(($FleetHop + $PlayerAttack + $Invasion) / 100) - $OldForcePool" />
                        <set_value name="$OldForcePool" exact="$ForcePool" operation="add" />
                        <do_if value="$ForcePool gt 100">
                            <set_value name="$ForcePool" exact="100" />
                        </do_if>
                        <set_value name="$chance" min="1" max="2" />
                        <do_if value="$ForcePool gt 5">
                            <do_if value="$FleetHop gt $Invasion and $FleetHop gt $PlayerAttack">
                                <set_value name="$BeaconSelected" exact="$TeleportationBeacons.random" />
                                <set_value name="$PatrolActivated" exact="false" />
                                <set_value name="$PlayerAttackActivated" exact="false" />
                                <set_value name="$PirateHopActivated" exact="false" />
                                <set_value name="$InvasionActivated" exact="false" />
                                <set_value name="$FleetHopActivated" exact="true" />
                                <set_value name="$HowManyToSpawn" exact="50" />
                                <signal_cue_instantly cue="FleetHop_Spawn" />
                            </do_if>
                            <do_if value="$PlayerAttack gt $Invasion and $PlayerAttack gt $FleetHop">
                                <set_value name="$BeaconSelected" exact="$TeleportationBeacons.random" />
                                <set_value name="$PatrolActivated" exact="false" />
                                <set_value name="$FleetHopActivated" exact="false" />
                                <set_value name="$PirateHopActivated" exact="false" />
                                <set_value name="$InvasionActivated" exact="false" />
                                <set_value name="$PlayerAttackActivated" exact="true" />
                                <set_value name="$HowManyToSpawn" exact="50" />
                                <signal_cue_instantly cue="PlayerAttack_Spawn" />
                            </do_if>
                            <do_if value="$Invasion gt $FleetHop and $Invasion gt $PlayerAttack">
                                <set_value name="$BeaconSelected" exact="$TeleportationBeacons.random" />
                                <set_value name="$PatrolActivated" exact="false" />
                                <set_value name="$PlayerAttackActivated" exact="false" />
                                <set_value name="$PirateHopActivated" exact="false" />
                                <set_value name="$FleetHopActivated" exact="false" />
                                <set_value name="$InvasionActivated" exact="true" />
                                <set_value name="$HowManyToSpawn" exact="50" />
                                <signal_cue_instantly cue="Invasion_Spawn" />
                            </do_if>
                        </do_if>
                        <do_if value="$ForcePool le 5 and $StationWeXenoned.count gt 0">
                            <!-- signal patrol -->
                        </do_if>
                        <do_else>
                            <do_if value="$chance == 1">
                                <set_value name="$BeaconSelected" exact="$TeleportationBeacons.random" />
                                <set_value name="$FleetHopActivated" exact="false" />
                                <set_value name="$PlayerAttackActivated" exact="false" />
                                <set_value name="$PirateHopActivated" exact="false" />
                                <set_value name="$InvasionActivated" exact="false" />
                                <set_value name="$PatrolActivated" exact="true" />
                                <set_value name="$HowManyToSpawn" exact="50" />
                                <signal_cue_instantly cue="Patrol_Spawn" />
                            </do_if>
                            <do_if value="$chance == 2">
                                <set_value name="$BeaconSelected" exact="$TeleportationBeacons.random" />
                                <set_value name="$PatrolActivated" exact="false" />
                                <set_value name="$PlayerAttackActivated" exact="false" />
                                <set_value name="$FleetHopActivated" exact="false" />
                                <set_value name="$InvasionActivated" exact="false" />
                                <set_value name="$PirateHopActivated" exact="true" />
                                <set_value name="$HowManyToSpawn" exact="50" />
                                <signal_cue_instantly cue="PirateHop_Spawn" />
                            </do_if>
                        </do_else>
                    </actions>
                </cue>
                <cue name="ReturnHome" instantiate="true" checkinterval="5min">
                    <actions>
                        <do_all exact="$FleetTable.keys.count" counter="$a">
                            <do_if value="$FleetTable.{$a}.$Active == true">
                                <do_if value="$FleetTable.{$a}.$FleetHop == true">
                                    <do_if value="(player.age - $FleetTable.{$a}.$Startime) gt 45min">
                                        <add_to_group groupname="$EndShips" list="$FleetTable.{$a}.$FleetShips" />
                                        <destroy_group group="$EndShips" />
                                        <clear_list list="$FleetTable.{$a}.$FleetShips" />
                                        <set_value name="$FleetTable.{$a}.$Active" exact="false" />
                                        <set_value name="$FleetTable.{$a}.$Startime" exact="0" />
                                        <set_value name="$FleetTable.{$a}.$FleetHop" exact="false" />
                                    </do_if>
                                </do_if>
                                <do_if value="$FleetTable.{$a}.$PirateHop == true">
                                    <do_if value="(player.age - $FleetTable.{$a}.$Startime) gt 45min">
                                        <add_to_group groupname="$EndShips" list="$FleetTable.{$a}.$FleetShips" />
                                        <destroy_group group="$EndShips" />
                                        <clear_list list="$FleetTable.{$a}.$FleetShips" />
                                        <set_value name="$FleetTable.{$a}.$Active" exact="false" />
                                        <set_value name="$FleetTable.{$a}.$Startime" exact="0" />
                                        <set_value name="$FleetTable.{$a}.$PirateHop" exact="false" />
                                    </do_if>
                                </do_if>
                                <do_if value="$FleetTable.{$a}.$PlayerAttack == true">
                                    <do_if value="(player.age - $FleetTable.{$a}.$Startime) gt 45min">
                                        <add_to_group groupname="$EndShips" list="$FleetTable.{$a}.$FleetShips" />
                                        <destroy_group group="$EndShips" />
                                        <clear_list list="$FleetTable.{$a}.$FleetShips" />
                                        <set_value name="$FleetTable.{$a}.$Active" exact="false" />
                                        <set_value name="$FleetTable.{$a}.$Startime" exact="0" />
                                        <set_value name="$FleetTable.{$a}.$PlayerAttack" exact="false" />
                                    </do_if>
                                </do_if>
                                <do_if value="$FleetTable.{$a}.$Invasion == true">
                                    <do_if value="(player.age - $FleetTable.{$a}.$Startime) gt 45min">
                                        <add_to_group groupname="$EndShips" list="$FleetTable.{$a}.$FleetShips" />
                                        <destroy_group group="$EndShips" />
                                        <clear_list list="$FleetTable.{$a}.$FleetShips" />
                                        <set_value name="$FleetTable.{$a}.$Active" exact="false" />
                                        <set_value name="$FleetTable.{$a}.$Startime" exact="0" />
                                        <set_value name="$FleetTable.{$a}.$Invasion" exact="false" />
                                    </do_if>
                                </do_if>
                                <!-- <set_value name="$FleetTable.{$NewEntry}" exact="table[
                                    $Beacon = $PatrolSpawnZone,
                                    $Active = true,
                                    $FleetHop = false,
                                    $PirateHop = false,
                                    $PlayerAttack = false,
                                    $Invasion = false,
                                    $Patrol = true,
                                    $Startime = player.age,
                                    $Quant = 0,
                                    $FleetShips = $XenonPatrolSpawns,
                                    $Target = $StationTargeted,
                                    $Base = $Homebase,
                                    $PatrolLeader = $LeaderSelected
                                    ]" /> -->
                                <do_if value="$FleetTable.{$a}.$Patrol == true">
                                    <do_if value="(player.age - $FleetTable.{$a}.$Startime) gt 45min">
                                        <add_to_group groupname="$EndShips" list="$FleetTable.{$a}.$FleetShips" />
                                        <destroy_group group="$EndShips" />
                                        <clear_list list="$FleetTable.{$a}.$FleetShips" />
                                        <set_value name="$FleetTable.{$a}.$Active" exact="false" />
                                        <set_value name="$FleetTable.{$a}.$Startime" exact="0" />
                                        <set_value name="$FleetTable.{$a}.$Patrol" exact="false" />
                                        <set_value name="$FleetTable.{$a}.$Base" exact="false" />
                                        <set_value name="$FleetTable.{$a}.$PatrolLeader" exact="false" />
                                        <set_value name="$FleetTable.{$a}.$Target" exact="false" />
                                    </do_if>
                                </do_if>
                            </do_if>
                        </do_all>
                    </actions>
                </cue>
                <!-- *****************************************************************************************************************************************
***********************************************************BEACONS********************************************************
***************************************************************************************************************************************** -->
                <cue name="BeaconJump" >
                    <actions>
                        <do_all exact="$TP_Sectors_FactionSpace.count" counter="$factionsector">
                            <set_value name="$Macro" exact="macro.tpwar_jump_beacon_t1_macro" />
                            <set_value name="$Sector" exact="$TP_Sectors_FactionSpace.{$factionsector}" />
                            <set_value name="$Owner" exact="faction.ownerless" />
                            <set_value name="$min" exact="35km" />
                            <set_value name="$max" exact="100km" />
                            <include_actions ref="SpawnBeaconLIB" />
                            <add_to_group groupname="$JumpBeacons" object="$BeaconSpawned" />
                            <remove_value name="$BeaconSpawned" />
                        </do_all>
                    </actions>
                </cue>
                <cue name="BeaconRate" instantiate="true" checkinterval="60s">
                    <actions>
                        <set_value name="$Macro" exact="macro.env_deco_nav_beacon_t1_macro" />
                        <set_value name="$Sector" exact="$TP_Sectors.random" />
                        <set_value name="$Owner" exact="faction.ownerless" />
                        <set_value name="$min" exact="450km" />
                        <set_value name="$max" exact="600km" />
                        <include_actions ref="SpawnBeaconLIB" />
                        <add_to_group groupname="$TeleportationBeacons" object="$BeaconSpawned" />
                        <remove_value name="$BeaconSpawned" />
                    </actions>
                </cue>
                <library name="SpawnBeaconLIB" >
                    <actions>
                        <create_object name="$BeaconSpawned" macro="$Macro" owner="$Owner" sector="$Sector">
                            <safepos min="$min" max="$max" />
                        </create_object>
                        <set_known object="$BeaconSpawned" known="true" />
                        <set_known object="$BeaconSpawned.zone" known="true" />
                        <set_known object="$BeaconSpawned.sector" known="true" />
                        <set_known object="$BeaconSpawned.cluster" known="true" />
                    </actions>
                </library>
                <!--    
*****************************************************************************************************************************************
***********************************************************STELLAR CART, FOS, TRS********************************************************
*****************************************************************************************************************************************
-->
                <!-- trs -->
                <cue name="EVENT_TRS_Launch" instantiate="true">
                    <conditions>
                        <event_satellite_launched space="player.galaxy" />
                    </conditions>
                    <actions>
                        <do_if value="event.param2.macro == macro.eq_arg_satellite_10_macro">
                            <set_value name="$InventoryKeys" exact="player.entity.inventory.list" />
                            <do_all exact="$InventoryKeys.count" counter="$i">
                                <do_if value="$InventoryKeys.{$i} == ware.trs_device">
                                    <find_station groupname="$TRS_Stations" multiple="true" space="event.param2.sector">
                                        <match owner="faction.player" negate="true" />
                                    </find_station>
                                    <do_all exact="$TRS_Stations.count" counter="$j">
                                        <do_if value="$TRS_Stations.{$j}.relationto.{faction.player} ge 0 and not $TRS_Stations.{$j}.haspermanenttradesubscription">
                                            <add_trade_subscription object="$TRS_Stations.{$j}" />
                                        </do_if>
                                    </do_all>
                                </do_if>
                                <add_to_group groupname="$TRS_Stable" object="event.param2" />
                            </do_all>
                        </do_if>
                        <do_if value="event.param2.macro == macro.eq_arg_satellite_09_macro">
                            <find_station groupname="$TRS_Stations" multiple="true" space="event.param2.sector">
                                <match owner="faction.player" negate="true" />
                            </find_station>
                            <do_all exact="$TRS_Stations.count" counter="$j">
                                <do_if value="$TRS_Stations.{$j}.relationto.{faction.player} ge 0 and not $TRS_Stations.{$j}.haspermanenttradesubscription">
                                    <add_trade_subscription object="$TRS_Stations.{$j}" />
                                </do_if>
                            </do_all>
                            <add_to_group groupname="$TRS_Unstable" object="event.param2" />
                            <set_value name="$delay" exact="150h" />
                            <do_all exact="$UnstableSats.count">
                                <set_value name="$delay" operation="subtract" exact="$delay / 2.2f" />
                            </do_all>
                            <signal_cue_instantly cue="TRS_Decay_Signalled" param="[event.param2, $delay, $UnstableSats]" />
                        </do_if>
                    </actions>
                </cue>
                <cue name="TRS_Decay_Signalled" instantiate="true">
                    <conditions>
                        <event_cue_signalled />
                    </conditions>
                    <delay exact="event.param.{2}" />
                    <actions>
                        <destroy_object object="event.param.{3}.random" />
                    </actions>
                </cue>
                <cue name="TRS_Destroyed" instantiate="true">
                    <conditions>
                        <check_any>
                            <event_object_destroyed group="TRS_Stable" />
                            <event_object_destroyed group="TRS_Unstable" />
                        </check_any>
                    </conditions>
                    <actions>
                        <do_if value="event.object.macro == macro.eq_arg_satellite_10_macro">
                            <find_station groupname="$TRS_Stations" multiple="true" space="event.object.sector">
                                <match owner="faction.player" negate="true" />
                            </find_station>
                            <do_all exact="$TRS_Stations.count" counter="$j">
                                <remove_trade_subscription object="$TRS_Stations.{$j}" />
                            </do_all>
                        </do_if>
                        <do_if value="event.object.macro == macro.eq_arg_satellite_09_macro">
                            <find_station groupname="$TRS_Stations" multiple="true" space="event.object.sector">
                                <match owner="faction.player" negate="true" />
                            </find_station>
                            <do_all exact="$TRS_Stations.count" counter="$j">
                                <remove_trade_subscription object="$TRS_Stations.{$j}" />
                            </do_all>
                        </do_if>
                    </actions>
                </cue>
                <!-- fos -->
                <cue name="EVENT_FOS_Scan" instantiate="true">
                    <conditions>
                        <event_long_range_scan_sent object="player.entity" />
                    </conditions>
                    <actions>
                        <set_value name="$InventoryKeys" exact="player.entity.inventory.list" />
                        <do_all exact="$InventoryKeys.count" counter="$i">
                            <do_if value="$InventoryKeys.{$i} == ware.fos_device">
                                <signal_cue_instantly cue="Fos_Scan_Report" />
                                <break />
                            </do_if>
                        </do_all>
                    </actions>
                </cue>
                <cue name="FOS_Scan_Report" instantiate="true">
                    <conditions>
                        <event_cue_signalled />
                    </conditions>
                    <actions>
                        <find_object groupname="$Ownerless" space="player.sector" owner="faction.ownerless" multiple="true" />
                        <do_all exact="$Ownerless.count" counter="$found">
                            <set_value name="$KnownObject" exact="$Ownerless.{$found}" />
                            <set_value name="$KnownState" exact="true" />
                            <set_value name="$KnownDetails" exact="true" />
                            <include_actions ref="SetKnownLIB" />
                            <write_to_logbook title="$Ownerless.{$found}.knownname" text="$Ownerless.{$found}.knownname" faction="$Ownerless.{$found}.owner" interaction="guidance" object="$Ownerless.{$found}" category="tips" />
                        </do_all>
                        <remove_value name="$Ownerless" />
                    </actions>
                </cue>
                <!-- cart -->
                <cue name="SC_Control" instantiate="true">
                    <conditions>
                        <event_object_docked object="player.entity" />
                    </conditions>
                    <actions>
                        <check_object result="$Result" object="event.param">
                            <match owner="faction.player" />
                            <match_content macro="macro.stellar_cartography_module_macro" min="1" />
                        </check_object>
                        <do_if value="$Result">
                            <signal_cue_instantly cue="Stellar_Cartography_Inventory_Check" />
                        </do_if>
                    </actions>
                </cue>
                <cue name="Stellar_Cartography_Inventory_Check" instantiate="true">
                    <conditions>
                        <event_cue_signalled />
                    </conditions>
                    <actions>
                        <set_value name="$InventoryKeys" exact="player.entity.inventory.list" />
                        <do_all exact="$InventoryKeys.count" counter="$i">
                            <do_if value="$InventoryKeys.{$i} == ware.inv_treasuremap">
                                <remove_inventory entity="player.entity" ware="ware.inv_treasuremap" exact="1" />
                                <signal_cue_instantly cue="Pirate_Treasure_Map_Start" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.inv_distressbeaconfreq">
                                <remove_inventory entity="player.entity" ware="ware.inv_distressbeaconfreq" exact="1" />
                                <signal_cue_instantly cue="Distress_Beacon_Freq_Start" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.inv_forgottenresearch">
                                <remove_inventory entity="player.entity" ware="ware.inv_forgottenresearch" exact="1" />
                                <signal_cue_instantly cue="Forgotten_Research_Start" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.inv_battlelog">
                                <remove_inventory entity="player.entity" ware="ware.inv_battlelog" exact="1" />
                                <signal_cue_instantly cue="Battle_Log_Start" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.inv_stellarmap">
                                <remove_inventory entity="player.entity" ware="ware.inv_stellarmap" exact="1" />
                                <signal_cue_instantly cue="Stellar_Map" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.inv_locationpiratehideout">
                                <remove_inventory entity="player.entity" ware="ware.inv_locationpiratehideout" exact="1" />
                                <signal_cue_instantly cue="Pirate_Hideout_Find" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_1">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_1" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware.  sector_inv_1" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_2">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_2" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware.  sector_inv_2" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_3">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_3" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware.  sector_inv_3" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_4">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_4" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware.  sector_inv_4" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_5">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_5" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware.  sector_inv_5" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_6">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_6" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware.  sector_inv_6" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_7">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_7" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware.  sector_inv_7" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_8">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_8" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware.  sector_inv_8" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_9">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_9" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware.  sector_inv_9" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_10">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_10" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_10" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_11">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_11" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_11" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_12">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_12" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_12" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_13">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_13" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_13" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_14">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_14" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_14" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_15">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_15" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_15" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_16">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_16" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_16" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_17">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_17" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_17" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_18">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_18" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_18" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_19">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_19" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_19" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_20">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_20" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_20" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_21">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_21" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_21" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_22">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_22" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_22" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_23">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_23" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_23" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_24">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_24" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_24" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_25">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_25" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_25" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_26">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_26" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_26" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_27">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_27" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_27" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_28">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_28" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_28" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_29">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_29" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_29" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_30">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_30" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_30" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_31">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_31" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_31" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_32">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_32" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_32" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_33">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_33" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_33" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_34">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_34" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_34" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_35">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_35" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_35" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_36">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_36" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_36" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_37">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_37" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_37" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_38">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_38" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_38" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_39">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_39" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_39" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_40">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_40" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_40" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_41">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_41" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_41" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_42">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_42" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_42" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_43">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_43" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_43" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_44">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_44" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_44" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_45">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_45" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_45" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_46">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_46" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_46" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_47">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_47" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_47" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_48">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_48" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_48" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_49">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_49" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_49" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_50">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_50" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_50" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_51">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_51" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_51" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_52">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_52" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_52" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_53">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_53" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_53" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_54">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_54" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_54" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_55">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_55" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_55" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_56">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_56" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_56" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_57">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_57" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_57" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_58">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_58" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_58" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_59">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_59" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_59" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_60">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_60" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_60" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_61">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_61" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_61" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_62">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_62" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_62" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_63">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_63" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_63" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_64">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_64" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_64" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_65">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_65" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_65" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_66">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_66" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_66" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_67">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_67" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_67" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_68">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_68" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_68" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_69">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_69" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_69" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_70">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_70" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_70" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_71">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_71" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_71" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_72">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_72" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_72" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_73">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_73" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_73" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_74">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_74" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_74" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_75">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_75" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_75" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_76">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_76" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_76" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_77">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_77" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_77" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_78">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_78" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_78" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_79">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_79" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_79" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_80">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_80" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_80" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_81">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_81" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_81" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_82">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_82" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_82" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_83">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_83" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_83" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_84">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_84" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_84" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_85">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_85" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_85" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_86">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_86" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_86" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_87">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_87" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_87" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_88">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_88" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_88" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_89">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_89" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_89" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_90">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_90" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_90" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_91">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_91" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_91" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_92">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_92" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_92" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_93">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_93" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_93" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_94">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_94" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_94" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_95">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_95" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_95" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_96">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_96" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_96" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_97">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_97" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_97" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_98">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_98" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_98" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_99">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_99" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware. sector_inv_99" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_100">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_100" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware.sector_inv_100" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_101">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_101" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware.sector_inv_101" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_102">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_102" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware.sector_inv_102" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_103">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_103" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware.sector_inv_103" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_104">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_104" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware.sector_inv_104" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_105">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_105" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware.sector_inv_105" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_106">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_106" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware.sector_inv_106" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_107">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_107" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware.sector_inv_107" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_108">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_108" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware.sector_inv_108" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_109">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_109" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware.sector_inv_109" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_110">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_110" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware.sector_inv_110" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_111">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_111" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware.sector_inv_111" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_112">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_112" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware.sector_inv_112" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_113">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_113" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware.sector_inv_113" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_114">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_114" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware.sector_inv_114" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_115">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_115" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware.sector_inv_115" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_116">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_116" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware.sector_inv_116" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_117">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_117" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware.sector_inv_117" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_118">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_118" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware.sector_inv_118" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_119">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_119" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware.sector_inv_119" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_120">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_120" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware.sector_inv_120" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_121">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_121" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware.sector_inv_121" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_122">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_122" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware.sector_inv_122" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_123">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_123" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware.sector_inv_123" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_124">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_124" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware.sector_inv_124" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_125">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_125" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware.sector_inv_125" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_126">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_126" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware.sector_inv_126" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_127">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_127" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware.sector_inv_127" />
                            </do_if>
                            <do_if value="$InventoryKeys.{$i} == ware.sector_inv_128">
                                <remove_inventory entity="player.entity" ware="ware.sector_inv_128" exact="1" />
                                <signal_cue_instantly cue="InventoryMatchtoSector" param="ware.sector_inv_128" />
                            </do_if>
                        </do_all>
                        <remove_value name="$InventoryKeys" />
                    </actions>
                </cue>
                <cue name="InventoryMatchtoSector" instantiate="true">
                    <conditions>
                        <event_cue_signalled />
                    </conditions>
                    <actions>
                        <set_value name="$SectorAlreadyKnown" exact="false" />
                        <do_all exact="$KnownSectorTable.keys.count" counter="$key">
                            <do_if value="$KnownSectorTable.{$key}.$Inven == event.param ">
                                <set_value name="$SectorAlreadyKnown" exact="true" />
                                <break />
                            </do_if>
                        </do_all>
                        <do_if value="SectorAlreadyKnown == false">
                            <set_value name="$KnownObject" exact="$TP_Sectors.random" />
                            <set_value name="$NewEntry" exact="$FleetTable.keys.list.max + 1" />
                            <set_value name="$KnownSectorTable.{$NewEntry}" exact="table[
                                    $Sector = $KnownObject,
                                    $Inven = event.param
                                    ]" />
                            <set_value name="$KnownState" exact="true" />
                            <set_value name="$KnownDetails" exact="true" />
                            <include_actions ref="SetKnownLIB" />
                        </do_if>
                    </actions>
                </cue>
                <cue name="SC_CrewLockbox" instantiate="true">
                    <conditions>
                        <event_cue_signalled />
                    </conditions>
                    <actions>
                        <set_value name="$Macro" exact="macro.stellar_cart_lockbox_crew_macro" />
                        <set_value name="$Sector" exact="$TP_Sectors.random" />
                        <set_value name="$Owner" exact="faction.ownerless" />
                        <set_value name="$min" exact="250km" />
                        <set_value name="$max" exact="600km" />
                        <include_actions ref="SpawnLockboxLIB" />
                        <add_to_group groupname="$CrewLockbox" object="$LockboxSpawned" />
                        <remove_value name="$LockboxSpawned" />
                    </actions>
                </cue>
                <cue name="SC_BlueprintLockbox" instantiate="true">
                    <conditions>
                        <event_cue_signalled />
                    </conditions>
                    <actions>
                        <set_value name="$Macro" exact="macro.stellar_cart_lockbox_blueprint_macro" />
                        <set_value name="$Sector" exact="$TP_Sectors.random" />
                        <set_value name="$Owner" exact="faction.ownerless" />
                        <set_value name="$min" exact="250km" />
                        <set_value name="$max" exact="600km" />
                        <include_actions ref="SpawnLockboxLIB" />
                        <add_to_group groupname="$SC_BlueprintLockbox" object="$LockboxSpawned" />
                        <remove_value name="$LockboxSpawned" />
                    </actions>
                </cue>
                <cue name="SC_StationLockbox" instantiate="true">
                    <conditions>
                        <event_cue_signalled />
                    </conditions>
                    <actions>
                        <set_value name="$Macro" exact="macro.stellar_cart_lockbox_station_macro" />
                        <set_value name="$Sector" exact="$TP_Sectors.random" />
                        <set_value name="$Owner" exact="faction.ownerless" />
                        <set_value name="$min" exact="250km" />
                        <set_value name="$max" exact="600km" />
                        <include_actions ref="SpawnLockboxLIB" />
                        <add_to_group groupname="$StationLockbox" object="$LockboxSpawned" />
                        <remove_value name="$LockboxSpawned" />
                    </actions>
                </cue>
                <cue name="SC_TreasureLockbox" instantiate="true">
                    <conditions>
                        <event_cue_signalled />
                    </conditions>
                    <actions>
                        <set_value name="$Macro" exact="macro.stellar_cart_lockbox_treasure_macro" />
                        <set_value name="$Sector" exact="$TP_Sectors.random" />
                        <set_value name="$Owner" exact="faction.ownerless" />
                        <set_value name="$min" exact="250km" />
                        <set_value name="$max" exact="600km" />
                        <include_actions ref="SpawnLockboxLIB" />
                        <add_to_group groupname="$TreasureLockbox" object="$LockboxSpawned" />
                        <remove_value name="$LockboxSpawned" />
                    </actions>
                </cue>
                <library name="SpawnLockboxLIB" >
                    <actions>
                        <create_object name="$LockboxSpawned" macro="$Macro" owner="$Owner" sector="$Sector">
                            <safepos min="$min" max="$max" />
                        </create_object>
                    </actions>
                </library>
                <library name="SetKnownLIB" >
                    <actions>
                        <set_known object="$KnownObject" known="$KnownState" updatesnapshot="$KnownDetails" />
                        <set_known object="$KnownObject.zone" known="$KnownState" updatesnapshot="$KnownDetails" />
                        <set_known object="$KnownObject.sector" known="$KnownState" updatesnapshot="$KnownDetails" />
                        <set_known object="$KnownObject.cluster" known="$KnownState" updatesnapshot="$KnownDetails" />
                    </actions>
                </library>
                <!--    
*****************************************************************************************************************************************
***********************************************************EVENTUPKEEP********************************************************
*****************************************************************************************************************************************
-->
                <cue name="EVENT_God" instantiate="true">
                    <conditions>
                        <check_any>
                            <event_god_created_station space="player.galaxy" />
                            <event_god_created_factory space="player.galaxy" />
                        </check_any>
                    </conditions>
                    <actions>
                        <add_to_group groupname="$TP_All_Stations" object="event.param" />
                        <do_if value="event.param.owner == faction.xenon">
                            <add_to_group groupname="$XenonAssets" object="event.param" />
                        </do_if>
                    </actions>
                </cue>
                <cue name="EVENT_Job" instantiate="true">
                    <conditions>
                        <check_any>
                            <event_job_ship_activated />
                        </check_any>
                    </conditions>
                    <actions>
                        <add_to_group groupname="$TP_All_Ships" object="event.param" />
                    </actions>
                </cue>
                <cue name="EVENT_Destroyed_Ship" instantiate="true">
                    <conditions>
                        <event_object_destroyed group="$TP_All_Ships" />
                    </conditions>
                    <actions>
                        <do_if value="event.object.owner == faction.xenon"></do_if>
                        <do_if value="event.object.owner == faction.player"></do_if>
                    </actions>
                </cue>
                <cue name="EVENT_Destroyed_Station" instantiate="true">
                    <conditions>
                        <event_object_destroyed group="$TP_All_Stations" />
                    </conditions>
                    <actions>
                        <do_if value="event.object.owner == faction.xenon">
                            <set_value name="$XenonSuccess" exact="1" operation="subtract" />
                        </do_if>
                        <do_if value="event.object.owner == faction.player and event.param.owner == faction.xenon">
                            <set_value name="$XenonSuccess" exact="1" operation="add" />
                            <set_value name="$PlayerSuccess" exact="1" operation="subtract" />
                        </do_if>
                        <do_if value="event.object.owner == faction.xenon and event.param.owner == faction.player">
                            <set_value name="$PlayerSuccess" exact="1" operation="add" />
                        </do_if>
                    </actions>
                </cue>
                <cue name="EVENT_Destroyed_JumpBeacon" instantiate="true">
                    <conditions>
                        <event_object_destroyed group="$JumpBeacons" />
                    </conditions>
                    <actions>
                        <do_if value="event.object.owner == faction.xenon">
                            <set_value name="$XenonSuccess" exact="1" operation="subtract" />
                        </do_if>
                        <do_if value="event.object.owner == faction.player and event.param.owner == faction.xenon">
                            <set_value name="$XenonSuccess" exact="1" operation="add" />
                        </do_if>
                        <do_if value="event.object.owner == faction.xenon and event.param.owner == faction.player">
                            <set_value name="$PlayerSuccess" exact="1" operation="add" />
                        </do_if>
                    </actions>
                </cue>
                <cue name="EVENT_Destroyed_TeleportationBeacons" instantiate="true">
                    <conditions>
                        <event_object_destroyed group="$TeleportationBeacons" />
                    </conditions>
                    <actions>
                        <do_if value="event.object.owner == faction.xenon">
                            <set_value name="$XenonSuccess" exact="1" operation="subtract" />
                        </do_if>
                        <do_if value="event.object.owner == faction.player and event.param.owner == faction.xenon">
                            <set_value name="$XenonSuccess" exact="1" operation="add" />
                        </do_if>
                        <do_if value="event.object.owner == faction.xenon and event.param.owner == faction.player">
                            <set_value name="$PlayerSuccess" exact="1" operation="add" />
                        </do_if>
                    </actions>
                </cue>
                <cue name="EVENT_Destroyed_TeleportationStations" instantiate="true">
                    <conditions>
                        <event_object_destroyed group="$TeleportationStations" />
                    </conditions>
                    <actions>
                        <do_if value="event.object.owner == faction.xenon">
                            <set_value name="$XenonSuccess" exact="1" operation="subtract" />
                        </do_if>
                        <do_if value="event.object.owner == faction.player and event.param.owner == faction.xenon">
                            <set_value name="$XenonSuccess" exact="1" operation="add" />
                        </do_if>
                        <do_if value="event.object.owner == faction.xenon and event.param.owner == faction.player">
                            <set_value name="$PlayerSuccess" exact="1" operation="add" />
                        </do_if>
                    </actions>
                </cue>
                <cue name="EVENT_Destroyed_XenonInvasionStations" instantiate="true">
                    <conditions>
                        <event_object_destroyed group="$XenonInvasionStations" />
                    </conditions>
                    <actions>
                        <do_if value="event.object.owner == faction.xenon">
                            <set_value name="$XenonSuccess" exact="1" operation="subtract" />
                        </do_if>
                        <do_if value="event.object.owner == faction.player and event.param.owner == faction.xenon">
                            <set_value name="$XenonSuccess" exact="1" operation="add" />
                        </do_if>
                        <do_if value="event.object.owner == faction.xenon and event.param.owner == faction.player">
                            <set_value name="$PlayerSuccess" exact="1" operation="add" />
                        </do_if>
                    </actions>
                </cue>
                <cue name="EVENT_Sector_Changed_Owner" instantiate="true">
                    <conditions>
                        <event_object_changed_owner group="$TP_Sectors" />
                    </conditions>
                    <actions>
                        <do_if value="event.object.owner == faction.xenon">
                            <set_value name="$XenonSuccess" exact="100" operation="add" />
                        </do_if>
                        <do_if value="event.object.owner == faction.player">
                            <set_value name="$PlayerSuccess" exact="50" operation="add" />
                        </do_if>
                    </actions>
                </cue>
                <cue name="EVENT_Station_Changed_Owner" instantiate="true">
                    <conditions>
                        <event_object_changed_owner group="$TP_All_Stations" />
                    </conditions>
                    <actions>
                        <do_if value="event.object.owner == faction.xenon">
                            <set_value name="$XenonSuccess" exact="2" operation="add" />
                            <add_to_group groupname="$XenonAssets" object="event.object" />
                        </do_if>
                        <do_if value="event.object.owner == faction.player">
                            <set_value name="$PlayerSuccess" exact="2" operation="add" />
                        </do_if>
                    </actions>
                </cue>
                <cue name="EVENT_Ship_Changed_Owner" instantiate="true">
                    <conditions>
                        <event_object_changed_owner group="$TP_All_Ships" />
                    </conditions>
                    <actions>
                        <!-- carrier -->
                        <!-- <do_if value=""></do_if> -->
                    </actions>
                </cue>
                <cue name="EVENT_Control_Formation" instantiate="true">
                    <conditions>
                        <event_object_order_finished group="$TP_Spanwned_Ships" />
                    </conditions>
                    <actions>
                        <!-- carrier -->
                        <do_if value="event.object.isformationleader != true or event.object.isformationwingman != true">
                            <debug_to_file text="'shipsthatshouldntdie ' + event.object.knownname" name="'shipsthatshouldntdie.log'" />
                            <destroy_object object="event.object" />
                        </do_if>
                    </actions>
                </cue>
                <!--    
*****************************************************************************************************************************************
***********************************************************WareMaint/EQMod********************************************************
*****************************************************************************************************************************************
-->
                <cue name="Ware_Monitor" instantiate="true" checktime="2min" checkinterval="30min">
                    <actions>
                        <do_all exact="$TP_All_Stations.count" counter="$thisstation">
                            <do_if value="$TP_All_Stations.{$thisstation}.istradestation == true and $TP_All_Stations.{$thisstation}.owner != faction.player">
                                <add_to_group groupname="$Tradestations" object="$TP_All_Stations.{$thisstation}" />
                            </do_if>
                            <do_if value="$TP_All_Stations.{$thisstation}.isshipyard == true and $TP_All_Stations.{$thisstation}.owner != faction.player">
                                <add_to_group groupname="$Shipyards" object="$TP_All_Stations.{$thisstation}" />
                                <add_to_group groupname="$WARE_Stations" object="$TP_All_Stations.{$thisstation}" />
                            </do_if>
                            <do_if value="$TP_All_Stations.{$thisstation}.iswharf == true and $TP_All_Stations.{$thisstation}.owner != faction.player">
                                <add_to_group groupname="$Wharfs" object="$TP_All_Stations.{$thisstation}" />
                                <add_to_group groupname="$WARE_Stations" object="$TP_All_Stations.{$thisstation}" />
                            </do_if>
                            <do_if value="$TP_All_Stations.{$thisstation}.isequipmentdock == true and $TP_All_Stations.{$thisstation}.owner != faction.player">
                                <add_to_group groupname="$Equipmentdocks" object="$TP_All_Stations.{$thisstation}" />
                                <add_to_group groupname="$WARE_Stations" object="$TP_All_Stations.{$thisstation}" />
                            </do_if>
                        </do_all>
                        <do_all exact="$Tradestations.count" counter="$tradesta">
                            <do_all exact="$Tradestations.{$tradesta}.tradewares.list.count" counter="$j">
                                <set_value name="$TradeOrNot" exact="0"/>
                                <set_value name="$ware" exact="$Tradestations.{$tradesta}.tradewares.list.{$j}" />
                                <set_value name="$waresAmount" exact="$Tradestations.{$tradesta}.cargo.{$ware}.count" />
                                <set_value name="$maxWaresAmount" exact="$Tradestations.{$tradesta}.cargo.{$ware}.target" />
                                <set_value name="$addWaresAmount" exact="0" />
                                <set_value name="$removeWaresAmount" exact="0" />
                                <do_if value="$ware == ware.nividium">
                                    <do_if value="$waresAmount gt $maxWaresAmount * 0.90">
                                        <set_value name="$removeWaresAmount" exact="($waresAmount - ($maxWaresAmount * 0.75))i" />
                                    </do_if>
                                </do_if>
                                <do_else>
                                    <do_if value="$waresAmount gt $maxWaresAmount * 0.95">
                                        <set_value name="$removeWaresAmount" exact="($waresAmount - ($maxWaresAmount * 0.90))i" />
                                    </do_if>
                                    <do_if value="$waresAmount lt $maxWaresAmount * 0.1">
                                        <set_value name="$addWaresAmount" exact="(($maxWaresAmount * 0.125) - $waresAmount)i" />
                                    </do_if>
                                </do_else>
                                <do_if value="$addWaresAmount gt 0">
                                    <add_cargo object="$Tradestations.{$tradesta}" ware="$ware" exact="$addWaresAmount" />
                                </do_if>
                                <do_if value="$removeWaresAmount gt 0">
                                    <remove_cargo object="$Tradestations.{$tradesta}" ware="$ware" exact="$removeWaresAmount" />
                                    <set_value name="$thistradestation" exact="$Tradestations.{$tradesta}"/>
                                    <set_value name="$TradeOrNot" exact="2"/>
                                    <include_actions ref="AddShipMod" />
                                </do_if>
                                <!-- tpdebug -->
                            </do_all>
                        </do_all>
                        <remove_value name="$ware" />
                        <remove_value name="$waresAmount" />
                        <remove_value name="$maxWaresAmount" />
                        <remove_value name="$addWaresAmount" />
                        <remove_value name="$removeWaresAmount" />
                        <do_all exact="$WARE_Stations.count" counter="$thisstation">
                            <set_value name="$thiswarestation" exact="$WARE_Stations.{$thisstation}" />
                            <do_all exact="$WARE_Stations.{$thisstation}.resources.list.count" counter="$k">
                                <set_value name="$TradeOrNot" exact="0"/>
                                <set_value name="$ware" exact="$WARE_Stations.{$thisstation}.resources.list.{$k}" />
                                <set_value name="$waresAmount" exact="$WARE_Stations.{$thisstation}.cargo.{$ware}.count" />
                                <set_value name="$maxWaresAmount" exact="$WARE_Stations.{$thisstation}.cargo.{$ware}.target" />
                                <set_value name="$addWaresAmount" exact="0" />
                                <set_value name="$removeWaresAmount" exact="0" />
                                <do_if value="$waresAmount gt $maxWaresAmount">
                                    <set_value name="$removeWaresAmount" exact="($waresAmount - $maxWaresAmount)i" />
                                </do_if>
                                <do_if value="$waresAmount lt $maxWaresAmount * 0.1">
                                    <set_value name="$addWaresAmount" exact="(($maxWaresAmount * 0.125) - $waresAmount)i" />
                                </do_if>
                                <do_if value="$addWaresAmount gt 0">
                                    <add_cargo object="$WARE_Stations.{$thisstation}" ware="$ware" exact="$addWaresAmount" />
                                </do_if>
                                <do_if value="$removeWaresAmount gt 0">
                                    <remove_cargo object="$WARE_Stations.{$thisstation}" ware="$ware" exact="$removeWaresAmount" />
                                    <set_value name="$TradeOrNot" exact="1"/>
                                    <include_actions ref="AddShipMod" />
                                </do_if>
                            </do_all>
                        </do_all>
                        <debug_text text="'HEY LOOK AT ME'"  />
                        <remove_value name="$ware" />
                        <remove_value name="$waresAmount" />
                        <remove_value name="$maxWaresAmount" />
                        <remove_value name="$addWaresAmount" />
                        <remove_value name="$removeWaresAmount" />
                    </actions>
                </cue>
                <library name="AddShipMod">
                    <actions>
                        <do_if value="$TradeOrNot == 1">
                            <set_value name="$Owner" exact="$thiswarestation.owner" />
                        </do_if>
                        <do_if value="$TradeOrNot == 2">
                            <set_value name="$Owner" exact="$thistradestation.owner" />
                        </do_if>
                        <find_ship name="$Ship" multiple="false" space="player.galaxy" validjobship="true" owner="$Owner">
                            <match class="[class.ship_l, class.ship_xl]" />
                            <match_any_equipment_mod negate="true" />
                        </find_ship>
                        <do_if value="$Ship.exists">
                            <do_any>
                                <add_equipment_mods object="$Ship">
                                    <ship ware="ware.mod_ship_mass_01_mk3" />
                                </add_equipment_mods>
                                <add_equipment_mods object="$Ship">
                                    <ship ware="ware.mod_ship_drag_01_mk1" />
                                </add_equipment_mods>
                                <add_equipment_mods object="$Ship">
                                    <ship ware="ware.mod_ship_maxhull_01_mk1" />
                                </add_equipment_mods>
                                <add_equipment_mods object="$Ship">
                                    <ship ware="ware.mod_ship_radarrange_01_mk1" />
                                </add_equipment_mods>
                                <add_equipment_mods object="$Ship">
                                    <ship ware="ware.mod_ship_countermeasurecapacity_01_mk1" />
                                </add_equipment_mods>
                                <add_equipment_mods object="$Ship">
                                    <ship ware="ware.mod_ship_deployablecapacity_01_mk1" />
                                </add_equipment_mods>
                                <add_equipment_mods object="$Ship">
                                    <ship ware="ware.mod_ship_missilecapacity_01_mk1" />
                                </add_equipment_mods>
                                <add_equipment_mods object="$Ship">
                                    <ship ware="ware.mod_ship_unitcapacity_01_mk1" />
                                </add_equipment_mods>
                                <add_equipment_mods object="$Ship">
                                    <ship ware="ware.mod_ship_mass_01_mk2" />
                                </add_equipment_mods>
                                <add_equipment_mods object="$Ship">
                                    <ship ware="ware.mod_ship_drag_01_mk2" />
                                </add_equipment_mods>
                                <add_equipment_mods object="$Ship">
                                    <ship ware="ware.mod_ship_mass_01_mk3" />
                                </add_equipment_mods>
                            </do_any>
                            <set_value name="$age" exact="player.age"/>
                            <debug_to_file name="'Added Ship Mods'" directory="'DeadAir_Fill'" text="'%1 - %2 - %3 - %4 - %5  %6'.[$Owner, $Ship.knownname, $Ship.class, $Ship.typename, $Ship.hasshipmod, $age]" output="false" append="true" />
                            <do_all exact="$Ship.wares.list.count" counter="$ware">
                                <debug_to_file name="'Added Ship Mods'" directory="'DeadAir_Fill'" text="$Ship.wares.list.{$ware}.knownname" output="false" append="true" />
                            </do_all>

                        </do_if>
                        <remove_value name="$Owner" />
                        <remove_value name="$Ship" />
                    </actions>
                </library>
                <!--    SHIP
                        mod_ship_mass_01_mk1
                        mod_ship_drag_01_mk1
                        mod_ship_maxhull_01_mk1
                        mod_ship_radarrange_01_mk1
                        mod_ship_countermeasurecapacity_01_mk1
                        mod_ship_deployablecapacity_01_mk1
                        mod_ship_missilecapacity_01_mk1
                        mod_ship_unitcapacity_01_mk1
                        mod_ship_mass_01_mk2
                        mod_ship_drag_01_mk2
                        mod_ship_mass_01_mk3 -->
                <!--    
*****************************************************************************************************************************************
***********************************************************SALVAGE********************************************************
*****************************************************************************************************************************************
-->
                <cue name="TP_War_Mark_Wrecks" instantiate="true">
                    <conditions>
                        <event_navbeacon_launched space="player.zone" />
                    </conditions>
                    <actions>
                        <do_if value="event.param2.macro == macro.tpwar_salvage_beacon_t1_macro">
                            <find_ship multiple="true" groupname="$MarkedWrecks" state="componentstate.wreck" unit="false" checkoperational="false" space="event.object" class="[class.ship_xl, class.ship_l, class.ship_m, class.ship_s]" />
                            <do_all exact="$MarkedWrecks.count" counter="$m">
                                <set_value name="$WreckFlag" exact="0" />
                                <set_value name="$WreckMacro" exact="$MarkedWrecks.{$m}.macro" />
                                <set_value name="$WreckDisplayName" exact="$MarkedWrecks.{$m}.macro.name" />
                                <set_value name="$WreckName" exact="$MarkedWrecks.{$m}.knownname" />
                                <set_value name="$WreckSector" exact="$MarkedWrecks.{$m}.sector" />
                                <set_value name="$WreckZone" exact="$MarkedWrecks.{$m}.zone" />
                                <set_value name="$WreckFaction" exact="$MarkedWrecks.{$m}.owner" />
                                <find_object_component object="$MarkedWrecks.{$m}" multiple="true" recursive="true" groupname="$WreckEquipmentList" />
                                <set_value name="$WreckMacro" exact="$MarkedWrecks.{$m}.macro" />
                                <do_if value="$MarkedWrecks.{$m}.macro.isclass.[class.ship_xl]">
                                    <set_value name="$WreckSize" exact="'class.ship_xl'" />
                                    <set_value name="$CostOfShip" exact="150 * $WreckEquipmentList.count" />
                                </do_if>
                                <do_if value="$MarkedWrecks.{$m}.macro.isclass.[class.ship_l]">
                                    <set_value name="$WreckSize" exact="'class.ship_l'" />
                                    <set_value name="$CostOfShip" exact="50 * $WreckEquipmentList.count" />
                                </do_if>
                                <do_if value="$MarkedWrecks.{$m}.macro.isclass.[class.ship_m]">
                                    <set_value name="$WreckSize" exact="'class.ship_m'" />
                                    <set_value name="$CostOfShip" exact="15 * $WreckEquipmentList.count" />
                                </do_if>
                                <do_if value="$MarkedWrecks.{$m}.macro.isclass.[class.ship_s]">
                                    <set_value name="$WreckSize" exact="'class.ship_s'" />
                                    <set_value name="$CostOfShip" exact="5 * $WreckEquipmentList.count" />
                                </do_if>
                                <set_value name="$MinMaxCost" min="2" max="5" />
                                <debug_to_file text="'requiredwares' + $RequiredWares.count" name="'salvagescript.log'" />
                                <set_value name="$NewEntry" exact="$MarkedWrecksTable.keys.list.max + 1" />
                                <set_value name="$MarkedWrecksTable.{$NewEntry}" exact="table[
                                $macro = $WreckMacro,
                                $size = $WreckSize,
                                $flag = $WreckFlag,
                                $displayname = $WreckDisplayName,
                                $name = $WreckName,
                                $sector = $WreckSector,
                                $zone = $WreckZone,
                                $faction = $WreckFaction,
                                $equipment = $WreckEquipmentList,
                                $resourcecost = $MinMaxCost,
                                $wreckbeacon = event.param2,
                                $salvage = 0,
                                $cost = $CostOfShip,
                                $used = true,
                                $warecost = [],
                                $Wreckage = player.age
                                ]" />
                                <clear_list list="$LocalMenu" />
                                <append_to_list name="$MarkedWrecksTable.{$NewEntry}.$warecost" exact="$EconWareLow.random" />
                                <append_to_list name="$MarkedWrecksTable.{$NewEntry}.$warecost" exact="$EconWareMed.random" />
                                <append_to_list name="$MarkedWrecksTable.{$NewEntry}.$warecost" exact="$EconWareHigh.random" />
                                <append_to_list name="$MarkedWrecksTable.{$NewEntry}.$warecost" exact="$TP_Wares.random" />
                                <remove_value name="$WreckMacro" />
                                <remove_value name="$WreckSize" />
                                <remove_value name="$WreckFlag" />
                                <remove_value name="$WreckName" />
                                <remove_value name="$WreckSector" />
                                <remove_value name="$WreckZone" />
                                <remove_value name="$WreckFaction" />
                                <remove_value name="$WreckBeacon" />
                                <remove_value name="$WreckEquipmentList" />
                                <remove_value name="$MinMaxCost" />
                                <debug_to_file text="'MarkedWrecksTable' + $MarkedWrecksTable.{$NewEntry}.$warecost" name="'salvagescript.log'" />
                            </do_all>
                        </do_if>
                    </actions>
                </cue>
                <cue name="TalkToMe" instantiate="true">
                    <conditions>
                        <check_any>
                            <event_conversation_started conversation="default" />
                            <event_conversation_returned_to_section section="default" />
                        </check_any>
                    </conditions>
                    <actions>
                        <do_if value="event.object.assignedcontrolled.owner == faction.player">
                            <do_if value="event.object.assignedcontrolled.primarypurpose == purpose.build">
                                <add_player_choice_sub text="'Salvage Operation'" section="SalvageMM" />
                                <add_to_group groupname="$Salvagers" object="event.object.assignedcontrolled" />
                            </do_if>
                        </do_if>
                    </actions>
                </cue>
                <cue name="Salvage_Main_Menu" instantiate="true">
                    <conditions>
                        <check_any>
                            <event_conversation_next_section section="SalvageMM" />
                            <event_conversation_returned_to_section section="SalvageMM" />
                        </check_any>
                    </conditions>
                    <actions>
                        <clear_list list="$LocalMenu" />
                        <clear_list list="$ActiveKeys" />
                        <set_value name="$ShipsNotInZone" exact="0" />
                        <do_all exact="$MarkedWrecksTable.keys.count" counter="$i">
                            <do_if value="$MarkedWrecksTable.{$i}.$used == true">
                                <do_if value="$MarkedWrecksTable.{$i}.$wreckbeacon.zone == event.object.assignedcontrolled.zone">
                                    <append_to_list name="$LocalMenu" exact="$i" />
                                </do_if>
                                <do_if value="$MarkedWrecksTable.{$i}.$salvage gt 0">
                                    <append_to_list name="$ActiveKeys" exact="$i" />
                                </do_if>
                                <do_else>
                                    <set_value name="$ShipsNotInZone" exact="1" operation="add" />
                                </do_else>
                            </do_if>
                        </do_all>
                        <do_if value="$LocalMenu.count gt 0">
                            <add_player_choice_sub text="'Salvageable Ships'" section="Salvageable_Ships_Shiplist" />
                        </do_if>
                        <do_if value="$ActiveKeys.count gt 0">
                            <add_player_choice_sub text="'Current Project'" section="Current_Project" />
                        </do_if>
                        <do_if value="$ShipsNotInZone == $MarkedWrecksTable.keys.count">
                            <add_player_choice text="'No Ships in Zone'" selectable="false" section="SalvageMM" />
                        </do_if>
                        <remove_value name="$ShipsNotInZone" />
                    </actions>
                </cue>
                <cue name="Current_Project" instantiate="true">
                    <conditions>
                        <check_any>
                            <event_conversation_next_section section="Current_Project" />
                            <event_conversation_returned_to_section section="Current_Project" />
                        </check_any>
                    </conditions>
                    <actions>
                        <set_value name="$CurrentPList" exact="event.param2 + 0" />
                        <add_player_choice text="'Next'" choiceparam="$CurrentPList + 4" section="Current_Project" />
                        <add_player_choice text="'Back'" choiceparam="$CurrentPList - 4" section="Current_Project" />
                        <add_player_choice text="$MarkedWrecksTable.{$ActiveKeys.{1 + $CurrentPList}}.$name" choiceparam="$ActiveKeys.{1 + $CurrentPList}" section="Project_Ship_Information" />
                        <add_player_choice text="$MarkedWrecksTable.{$ActiveKeys.{2 + $CurrentPList}}.$name" choiceparam="$ActiveKeys.{2 + $CurrentPList}" section="Project_Ship_Information" />
                        <add_player_choice text="$MarkedWrecksTable.{$ActiveKeys.{3 + $CurrentPList}}.$name" choiceparam="$ActiveKeys.{3 + $CurrentPList}" section="Project_Ship_Information" />
                        <add_player_choice text="$MarkedWrecksTable.{$ActiveKeys.{4 + $CurrentPList}}.$name" choiceparam="$ActiveKeys.{4 + $CurrentPList}" section="Project_Ship_Information" />
                    </actions>
                </cue>
                <cue name="Project_Ship_Information" instantiate="true">
                    <conditions>
                        <check_any>
                            <event_conversation_next_section section="Project_Ship_Information" />
                            <event_conversation_returned_to_section section="Project_Ship_Information" />
                        </check_any>
                    </conditions>
                    <actions>
                        <add_player_choice text="'Salvage: ' + $MarkedWrecksTable.{event.param2}.$salvage" selectable="false" section="Project_Ship_Information" />
                        <add_player_choice text="$MarkedWrecksTable.{event.param2}.$displayname" selectable="false" section="Project_Ship_Information" />
                        <do_if value="$MarkedWrecksTable.{event.param2}.$salvage gt $MarkedWrecksTable.{event.param2}.$cost">
                            <add_player_choice text="'Salvage Ship'" choiceparam="event.param2" section="Start_Salvage" />
                        </do_if>
                        <add_player_choice text="$MarkedWrecksTable.{event.param2}.$size" selectable="false" section="Project_Ship_Information" />
                        <add_player_choice text="'Cost: ' + $MarkedWrecksTable.{event.param2}.$cost" selectable="false" section="Project_Ship_Information" />
                        <add_player_choice text="'%s %s %s %s'.[$MarkedWrecksTable.{event.param2}.$warecost.{1}, $MarkedWrecksTable.{event.param2}.$warecost.{2}, $MarkedWrecksTable.{event.param2}.$warecost.{3}, $MarkedWrecksTable.{event.param2}.$warecost.{4}]" selectable="false" section="Project_Ship_Information" />
                    </actions>
                </cue>
                <cue name="SalvageCostCounter" instantiate="true" checkinterval="30s">
                    <actions>
                        <do_all exact="$MarkedWrecksTable.keys.count" counter="$project">
                            <do_all exact="$Salvagers.count" counter="$ship">
                                <do_if value="$Salvagers.{$ship}.zone == $MarkedWrecksTable.{$project}.$wreckbeacon.zone">
                                    <set_value name="$WareSelected" exact="$MarkedWrecksTable.{$project}.$warecost.random" />
                                    <set_value name="$warelist" exact="$Salvagers.{$ship}.cargo.list" />
                                    <do_all exact="$warelist.count" counter="$ware">
                                        <do_if value="$warelist.{$ware} == $WareSelected">
                                            <remove_cargo object="$Salvagers.{$ship}" ware="$WareSelected" />
                                            <show_notification text="$Salvagers.{$ship}.knownname + $WareSelected.knownname" />
                                            <break />
                                        </do_if>
                                        <do_else>
                                            <show_notification text="'$Salvage Project Requires More ' + $WareSelected" />
                                        </do_else>
                                    </do_all>
                                    <remove_value name="$WareSelected" />
                                    <remove_value name="$warelist" />
                                </do_if>
                            </do_all>
                        </do_all>
                    </actions>
                </cue>
                <cue name="Start_Salvage" instantiate="true">
                    <conditions>
                        <check_any>
                            <event_conversation_next_section section="Start_Salvage" />
                            <event_conversation_returned_to_section section="Start_Salvage" />
                        </check_any>
                    </conditions>
                    <actions>
                        <do_if value="$MarkedWrecksTable.{event.param2}.$salvage gt $MarkedWrecksTable.{event.param2}.$cost">
                            <do_if value="$MarkedWrecksTable.{event.param2}.$size == 'class.ship_s'">
                                <find_dockingbay groupname="$Docks" multiple="true" object="event.object.assignedcontrolled">
                                    <match_dock size="tag.dock_s" free="true" />
                                </find_dockingbay>
                                <set_value name="$DockSelected" exact="$Docks.random" />
                                <create_ship groupname="$SalvageReward" dock="$DockSelected" macro="$MarkedWrecksTable.{event.param2}.$macro"></create_ship>
                                <remove_value name="$Docks" />
                                <remove_value name="$DockSelected" />
                            </do_if>
                            <do_if value="$MarkedWrecksTable.{event.param2}.$size == 'class.ship_m'">
                                <find_dockingbay groupname="$Docks" multiple="true" object="event.object.assignedcontrolled">
                                    <match_dock size="tag.dock_m" free="true" />
                                </find_dockingbay>
                                <set_value name="$DockSelected" exact="$Docks.random" />
                                <create_ship groupname="$SalvageReward" dock="$DockSelected" macro="$MarkedWrecksTable.{event.param2}.$macro" />
                                <remove_value name="$Docks" />
                                <remove_value name="$DockSelected" />
                            </do_if>
                            <do_if value="$MarkedWrecksTable.{event.param2}.$size == 'class.ship_l' or $MarkedWrecksTable.{event.param2}.$size == 'class.ship_xl'">
                                <create_position name="$SpawnPosition" x="event.object.assignedcontrolled.position.x" y="event.object.assignedcontrolled.position.y + 10km" z="event.object.assignedcontrolled.position.z" />
                                <create_ship groupname="$SalvageReward" zone="event.object.assignedcontrolled" macro="$MarkedWrecksTable.{event.param2}.$macro">
                                    <position exact="$SpawnPosition" />
                                </create_ship>
                                <remove_value name="$SpawnPosition" />
                            </do_if>
                            <set_value name="$MarkedWrecksTable.{event.param2}.$used" exact="false" />
                        </do_if>
                        <do_if value="$MarkedWrecksTable.{event.param2}.$salvage == 0">
                            <set_value name="$MarkedWrecksTable.{event.param2}.$salvage" exact="1" />
                            <add_player_choice text="'Project Started'" section="TalkToMe" />
                        </do_if>
                        <add_player_choice text="'Ship Salvaged'" section="TalkToMe" />
                    </actions>
                </cue>
                <cue name="Salvageable_Ships_Shiplist" instantiate="true">
                    <conditions>
                        <check_any>
                            <event_conversation_next_section section="Salvageable_Ships_Shiplist" />
                            <event_conversation_returned_to_section section="Salvageable_Ships_Shiplist" />
                        </check_any>
                    </conditions>
                    <actions>
                        <set_value name="$listposition" exact="event.param2 + 0" />
                        <add_player_choice text="'Next'" choiceparam="$listposition + 4" section="Salvageable_Ships_Shiplist" />
                        <add_player_choice text="'Back'" choiceparam="$listposition - 4" section="Salvageable_Ships_Shiplist" />
                        <add_player_choice text="$MarkedWrecksTable.{$LocalMenu.{1 + $listposition}}.$name" choiceparam="$LocalMenu.{1 + $listposition}" section="Salvageable_Ship_Information" />
                        <add_player_choice text="$MarkedWrecksTable.{$LocalMenu.{2 + $listposition}}.$name" choiceparam="$LocalMenu.{2 + $listposition}" section="Salvageable_Ship_Information" />
                        <add_player_choice text="$MarkedWrecksTable.{$LocalMenu.{3 + $listposition}}.$name" choiceparam="$LocalMenu.{3 + $listposition}" section="Salvageable_Ship_Information" />
                        <add_player_choice text="$MarkedWrecksTable.{$LocalMenu.{4 + $listposition}}.$name" choiceparam="$LocalMenu.{4 + $listposition}" section="Salvageable_Ship_Information" />
                    </actions>
                </cue>
                <cue name="Salvageable_Ship_Information" instantiate="true">
                    <conditions>
                        <check_any>
                            <event_conversation_next_section section="Salvageable_Ship_Information" />
                            <event_conversation_returned_to_section section="Salvageable_Ship_Information" />
                        </check_any>
                    </conditions>
                    <actions>
                        <add_player_choice text="$MarkedWrecksTable.{event.param2}.$name" selectable="false" section="Salvageable_Ship_Information" />
                        <add_player_choice text="$MarkedWrecksTable.{event.param2}.$displayname" selectable="false" section="Salvageable_Ship_Information" />
                        <do_if value="$MarkedWrecksTable.{event.param2}.$salvage == 0 or $MarkedWrecksTable.{event.param2}.$salvage gt $MarkedWrecksTable.{event.param2}.$cost">
                            <add_player_choice text="'Salvage Ship'" choiceparam="event.param2" section="Start_Salvage" />
                        </do_if>
                        <add_player_choice text="$MarkedWrecksTable.{event.param2}.$size" selectable="false" section="Salvageable_Ship_Information" />
                        <add_player_choice text="'Cost: ' + $MarkedWrecksTable.{event.param2}.$cost" selectable="false" section="Salvageable_Ship_Information" />
                        <add_player_choice text="'Back'" choiceparam="$listposition - 4" section="Salvageable_Ships_Shiplist" />
                    </actions>
                </cue>
                <!-- *****************************************************************************************************************************************
***********************************************************Mercenary********************************************************
***************************************************************************************************************************************** -->
                <cue name="StartConversation" instantiate="true">
                    <conditions>
                        <check_any>
                            <event_conversation_started conversation="default" />
                            <event_conversation_returned_to_section section="default" />
                        </check_any>
                    </conditions>
                    <actions>
                        <do_if value="event.object.assignedcontrolled.owner != faction.player and event.object.owner.relationto.{faction.player} ge 0.01">
                            <do_if value="event.object.assignedcontrolled.primarypurpose == purpose.trade or event.object.assignedcontrolled.primarypurpose == purpose.mine">
                                <set_value name="$Hullprice" exact="event.object.assignedcontrolled.macro.ware.averageprice" />
                                <set_value name="$Reploss" exact="'1.5%'" comment="0.015" />
                                <set_value name="$TradeMargin" exact="'10%'" />
                                <add_player_choice_sub text="'Mercenary Contract'" tooltip="'Sign or break a mercenary contract to protect this ship. You can share in their trade profits, but risk losing money and reputation if you fail.'" choiceparam="[$Hullprice, $Reploss, $TradeMargin]" section="ContractDetails" />
                            </do_if>
                        </do_if>
                    </actions>
                </cue>
                <cue name="MercenaryMenu" instantiate="true">
                    <conditions>
                        <check_any>
                            <event_conversation_next_section section="ContractDetails" />
                            <event_conversation_returned_to_section section="ContractDetails" />
                        </check_any>
                    </conditions>
                    <actions>
                        <add_player_choice text="'Insurance ' + $Hullprice" tooltip="'Amount you will pay to replace this ship if it dies'" section="ContractDetails" selectable="false" />
                        <add_player_choice text="'Reputation ' + $Reploss" tooltip="'Reputation you will lose with this faction if this ship dies'" section="ContractDetails" selectable="false" />
                        <add_player_choice text="'Margin ' + $TradeMargin" tooltip="'Percentage you will earn from every successful trade this ship makes'" section="ContractDetails" selectable="false" />
                        <set_value name="$IsContracted" exact="false" />
                        <do_all exact="$ContractShips.count" counter="$ship">
                            <do_if value="$ContractShips.{$ship} == event.object.assignedcontrolled">
                                <set_value name="$IsContracted" exact="true" />
                            </do_if>
                        </do_all>
                        <do_if value="$IsContracted == true">
                            <add_player_choice text="'Cancel Contract'" section="MercenaryCancelled" />
                        </do_if>
                        <do_else>
                            <add_player_choice text="'Agree to Contract'" section="MercenaryAccepted" />
                        </do_else>
                        <add_player_choice_return text="'Nevermind'" />
                    </actions>
                </cue>
                <cue name="MercenaryCancelled" instantiate="true">
                    <conditions>
                        <check_any>
                            <event_conversation_next_section section="MercenaryCancelled" />
                            <event_conversation_returned_to_section section="MercenaryCancelled" />
                        </check_any>
                    </conditions>
                    <actions>
                        <remove_from_group group="$ContractShips" object="event.object.assignedcontrolled" />
                        <remove_from_group group="$ContractPilots" object="event.object" />
                        <add_player_choice_return text="'Contract Cancelled (return)'" tooltip="'Thanks for nothing you worthless leech! Maybe we will ask the Xenon to protect us!'" />
                    </actions>
                </cue>
                <cue name="MercenaryAccepted" instantiate="true">
                    <conditions>
                        <check_any>
                            <event_conversation_next_section section="MercenaryAccepted" />
                            <event_conversation_returned_to_section section="MercenaryAccepted" />
                        </check_any>
                    </conditions>
                    <actions>
                        <set_value name="$Ship" exact="event.object.assignedcontrolled" />
                        <add_to_group groupname="$ContractShips" object="event.object.assignedcontrolled" />
                        <add_to_group groupname="$ContractPilots" object="event.object" />
                        <add_player_choice_return text="'Contract Complete (return)'" tooltip="'Thank you for agreeing to protect us and our products!'" />
                    </actions>
                </cue>
                <cue name="MercenaryTradeStart" instantiate="true">
                    <conditions>
                        <event_object_docked group="$ContractShips" />
                    </conditions>
                    <actions>
                        <set_value name="$wares" exact="table[]" />
                        <set_value name="$warelist" exact="event.object.cargo.list" />
                        <do_all exact="$warelist.count" counter="$ware">
                            <set_value name="$tradeware" exact="$warelist.{$ware}" />
                            <set_value name="$tradecount" exact="event.object.cargo.{$tradeware}.count" />
                            <set_value name="$wares.{$ware}" exact="table[
                                    $waretotrade = $tradeware,
                                    $waretotradecount = $tradecount
                                     ]" />
                        </do_all>
                        <set_value name="$Object" exact="event.object" />
                    </actions>
                    <cues>
                        <cue name="MercenaryTradeComplete">
                            <conditions>
                                <event_object_undocked object="$Object" />
                            </conditions>
                            <actions>
                                <do_all exact="$wares.keys.count" counter="$key">
                                    <set_value name="$wareselected" exact="$wares.{$key}.$waretotrade" />
                                    <set_value name="$Diff" exact="$wares.{$key}.$waretotradecount - event.object.cargo.{$wareselected}.count" />
                                    <do_if value="$Diff gt 0">
                                        <set_value name="$Money" exact="$wares.{$key}.$waretotrade.averageprice * $Diff / 10" />
                                        <transfer_money from="event.object.owner" to="faction.player" amount="$Money" />
                                    </do_if>
                                </do_all>
                            </actions>
                        </cue>
                    </cues>
                </cue>
                <cue name="MercenaryAttackTimer" checkinterval="1min">
                    <actions>
                        <reset_cue cue="MercenaryShipAttacked" />
                    </actions>
                </cue>
                <cue name="MercenaryShipAttacked">
                    <conditions>
                        <event_object_attacked group="$ContractShips" />
                    </conditions>
                    <actions>
                        <set_value name="$textHeader" exact="'Contracted Ship is Under Attack! %1\n'.[event.object.knownname]" />
                        <set_value name="$textBody" exact="'Assistance needed in sector: %1\n'.[event.object.sector.knownname]" />
                        <set_value name="$textExplain" exact="'Failure to protect this ship will result in insurance payment to replace the ship as well as a reputation loss with this faction'" />
                        <show_notification text="$textHeader + $textBody" timeout="10s" />
                        <write_to_logbook title="$textHeader" text="$textBody + $textExplain" interaction="guidance" object="event.object" category="missions" />
                        <remove_value name="$textHeader" />
                        <remove_value name="$textBody" />
                        <remove_value name="$textExplain" />
                    </actions>
                </cue>
                <cue name="MercenaryShipKilled" instantiate="true">
                    <conditions>
                        <event_object_destroyed group="$ContractShips" />
                    </conditions>
                    <actions>
                        <transfer_money from="faction.player" to="event.object.owner" amount="event.object.macro.ware.averageprice" />
                        <add_faction_relation faction="faction.player" otherfaction="event.object.owner" value="-0.0015" reason="relationchangereason.missionfailed" />
                        <set_value name="$textHeader" exact="'Contracted Ship Destroyed! %1 destroyed by %2 in %3\n'.[event.object.knownname, event.param.owner.knownname, event.object.sector.knownname]" />
                        <set_value name="$textBody" exact="'Insurance payment owed: %1 and reputation loss with %2: 1.5 percent\n'.[event.object.macro.ware.averageprice, event.object.owner.knownname]" />
                        <show_notification text="$textHeader + $textBody" timeout="10s" />
                        <write_to_logbook title="$textHeader" text="$textBody" interaction="showonmap" object="event.object" category="missions" />
                        <remove_value name="$textHeader" />
                        <remove_value name="$textBody" />
                    </actions>
                </cue>
                <!--    
*****************************************************************************************************************************************
***********************************************************ANOM********************************************************
*****************************************************************************************************************************************
-->
                <!-- <library name="SpawnAnomLIB" instantiate="true">
                    <actions>
                        <create_object macro=""></create_object>
                    </actions>
                </library> -->
                <!--    
*****************************************************************************************************************************************
***********************************************************DeadAir TradeStations********************************************************
*****************************************************************************************************************************************
-->
                <cue name="DeadAirTradeStations">
                    <actions>
                        <find_sector groupname="$SectorsForStation" space="player.galaxy" multiple="false" owner="faction.argon"></find_sector>
                        <find_sector groupname="$SectorsForStation" space="player.galaxy" multiple="false" owner="faction.antigone"></find_sector>
                        <find_sector groupname="$SectorsForStation" space="player.galaxy" multiple="false" owner="faction.teladi"></find_sector>
                        <find_sector groupname="$SectorsForStation" space="player.galaxy" multiple="false" owner="faction.paranid"></find_sector>
                        <find_sector groupname="$SectorsForStation" space="player.galaxy" multiple="false" owner="faction.holyorder"></find_sector>
                        <do_all exact="$SectorsForStation.count" counter="$m">
                            <get_safe_pos result="$Position" sector="$SectorsForStation.{$m}" radius="25km" value="position.[1, 1, 1]" allowyaxis="false" />
                            <set_value name="$StationTag" exact="tag.tradestation" />
                            <set_value name="$StationType" exact="'tradingstation'" />
                            <get_construction_plan result="$IntTradeStationConstructionPlan" faction="$SectorsForStation.{$m}.owner" tags="$StationTag" />
                            <do_if value="$IntTradeStationConstructionPlan">
                                <get_module_set_macro result="$IntTradeStationMacro" race="$SectorsForStation.{$m}.owner.primaryrace" type="$StationType" />
                                <do_if value="$IntTradeStationConstructionPlan and $IntTradeStationMacro">
                                    <create_station groupname="$deadairshouldusegroups" name="$DeadStationCreated" sector="$SectorsForStation.{$m}" owner="$SectorsForStation.{$m}.owner" state="componentstate.operational" macro="$IntTradeStationMacro">
                                        <safepos value="$Position" includeplotbox="true" />
                                    </create_station>
                                    <generate_loadout sequence="$IntTradeStationConstructionPlan" level="0.75" result="$Loadouts" faction="$SectorsForStation.{$m}.owner" />
                                    <do_all exact="$Loadouts.count" counter="$l">
                                        <apply_loadout sequence="$IntTradeStationConstructionPlan" index="$l" loadout="$Loadouts.{$l}" />
                                    </do_all>
                                    <add_build_to_expand_station object="$DeadStationCreated.buildstorage" buildobject="$DeadStationCreated" constructionplan="$IntTradeStationConstructionPlan" result="$BuildID" />
                                </do_if>
                            </do_if>
                            <remove_value name="$StationTag" />
                            <remove_value name="$StationType" />
                            <remove_value name="$IntTradeStationConstructionPlan" />
                            <remove_value name="$IntTradeStationMacro" />
                            <remove_value name="$Position" />
                            <remove_value name="$Loadouts" />
                            <debug_to_file text="'tradewares1' + $DeadStationCreated.tradewares" name="'deadairtradestation.log'" />
                            <debug_to_file text="'sector1' + $DeadStationCreated.sector.knownname" name="'deadairtradestation.log'" />
                            <debug_to_file text="'knownname1' + $DeadStationCreated.knownname" name="'deadairtradestation.log'" />
                        </do_all>
                        <do_all exact="$deadairshouldusegroups.count" counter="$dead">
                            <do_all exact="$deadairshouldusegroups.{$dead}.tradewares.list.count" counter="$g">
                                <set_value name="$IntTradeStationWare" exact="$deadairshouldusegroups.{$dead}.tradewares.list.{$g}" />
                                <!-- <debug_to_file text="'tradewaresremove' + $IntTradeStationWare" name="'deadairtradestation.log'" /> -->
                                <remove_tradeware object="$deadairshouldusegroups.{$dead}" ware="$IntTradeStationWare" />
                            </do_all>
                            <add_tradeware object="$deadairshouldusegroups.{$dead}" ware="ware.antimattercells" allowbuy="true" allowsell="true" lockavgprice="true" />
                            <add_tradeware object="$deadairshouldusegroups.{$dead}" ware="ware.energycells" allowbuy="true" allowsell="true" lockavgprice="true" />
                            <add_tradeware object="$deadairshouldusegroups.{$dead}" ware="ware.graphene" allowbuy="true" allowsell="true" lockavgprice="true" />
                            <add_tradeware object="$deadairshouldusegroups.{$dead}" ware="ware.microchips" allowbuy="true" allowsell="true" lockavgprice="true" />
                            <add_tradeware object="$deadairshouldusegroups.{$dead}" ware="ware.missilecomponents" allowbuy="true" allowsell="true" lockavgprice="true" />
                            <add_tradeware object="$deadairshouldusegroups.{$dead}" ware="ware.quantumtubes" allowbuy="true" allowsell="true" lockavgprice="true" />
                            <add_tradeware object="$deadairshouldusegroups.{$dead}" ware="ware.siliconwafers" allowbuy="true" allowsell="true" lockavgprice="true" />
                            <add_tradeware object="$deadairshouldusegroups.{$dead}" ware="ware.smartchips" allowbuy="true" allowsell="true" lockavgprice="true" />
                            <add_tradeware object="$deadairshouldusegroups.{$dead}" ware="ware.superfluidcoolant" allowbuy="true" allowsell="true" lockavgprice="true" />
                            <add_tradeware object="$deadairshouldusegroups.{$dead}" ware="ware.water" allowbuy="true" allowsell="true" lockavgprice="true" />
                            <do_if value="$deadairshouldusegroups.{$dead}.owner == faction.teladi">
                                <add_tradeware object="$deadairshouldusegroups.{$dead}" ware="ware.teladianium" allowbuy="true" allowsell="true" lockavgprice="true" />
                            </do_if>
                            <do_else>
                                <add_tradeware object="$deadairshouldusegroups.{$dead}" ware="ware.refinedmetals" allowbuy="true" allowsell="true" lockavgprice="true" />
                            </do_else>
                            <debug_to_file text="'tradewares' + $deadairshouldusegroups.{$dead}.tradewares.list" name="'deadairtradestation.log'" />
                            <debug_to_file text="'sector' + $deadairshouldusegroups.{$dead}.sector.knownname" name="'deadairtradestation.log'" />
                            <debug_to_file text="'knownname' + $deadairshouldusegroups.{$dead}.knownname" name="'deadairtradestation.log'" />
                            <debug_to_file text="'knownname' + $deadairshouldusegroups.{$dead}.macro" name="'deadairtradestation.log'" />
                        </do_all>
                    </actions>
                </cue>
                <!--                 
*****************************************************************************************************************************************
**********************************************************SPAWNFLEETS********************************************************
***************************************************************************************************************************************** -->
                <library name="SpawnStationLIB" >
                    <actions>
                        <create_station groupname="$SpawnedStationGroup" name="$StationSpawned" macro="$StationMacro" sector="$SectorToSpawnIn" constructionplan="'$ConstructionPlan'" owner="$ConstructionFaction" state="componentstate.operational">
                            <safepos min="-100km" max="100km" />
                        </create_station>
                        <create_cue_actor cue="this" name="$Manager">
                            <select race="race.teladi" tags="controlpost.manager.tag" />
                            <owner exact="faction.argon" />
                            <skills>
                                <skill type="management" exact="1" />
                            </skills>
                        </create_cue_actor>
                        <create_cue_actor cue="this" name="$Def">
                            <select race="race.drone" tags="tag.defence" />
                            <owner exact="faction.argon" />
                            <skills>
                                <skill type="management" exact="1" />
                            </skills>
                        </create_cue_actor>
                        <create_cue_actor cue="this" name="$Eng">
                            <select race="race.drone" tags="tag.engineer" />
                            <owner exact="faction.argon" />
                            <skills>
                                <skill type="management" exact="1" />
                            </skills>
                        </create_cue_actor>
                        <assign_control_entity object="$StationSpawned" actor="$Manager" post="controlpost.manager" transfer="true" />
                        <assign_control_entity object="$StationSpawned" actor="$Def" post="controlpost.defence" transfer="true" />
                        <assign_control_entity object="$StationSpawned" actor="$Eng" post="controlpost.engineer" transfer="true" />
                        <add_workforce object="$StationSpawned" race="race.argon" exact="500" />
                        <set_object_docking_enabled object="$StationSpawned" enabled="true" />
                        <remove_value name="$Manager" />
                        <remove_value name="$Def" />
                        <remove_value name="$Eng" />
                        <add_to_group groupname="$TP_All_Stations" object="$StationSpawned" />
                    </actions>
                </library>
                <!--    
*****************************************************************************************************************************************
**********************************************************SPREAD INVASION********************************************************
*****************************************************************************************************************************************
-->
                <cue name="Start_Spread" instantiate="true">
                    <conditions>
                        <event_cue_signalled />
                    </conditions>
                    <actions>
                        <find_station groupname="$InvasionStationTargets" space="$event.param.sector" functional="true" multiple="true">
                            <match owner="faction.khaak" negate="true" />
                            <match_relation_to faction="faction.xenon" comparison="le" relation="enemy" />
                        </find_station>
                        <set_value name="$InvasionSpreadTable" exact="table[]" />
                        <do_all exact="$InvasionStationTargets.count" counter="$a">
                            <set_value name="$InvasionSpreadTable.{$a}" exact="table[
                                $Station = $InvasionStationTargets.{$a},
                                $x = $InvasionStationTargets.{$a}.zone.position.x,
                                $y = $InvasionStationTargets.{$a}.zone.position.y,
                                $z = $InvasionStationTargets.{$a}.zone.position.z
                                    ]" />
                        </do_all>
                        <do_all exact="$InvasionSpreadTable.keys.count" counter="$j">
                            <set_value name="$xcount" exact="$InvasionSpreadTable.{$j}.$x" operation="add" />
                            <set_value name="$ycount" exact="$InvasionSpreadTable.{$j}.$y" operation="add" />
                            <set_value name="$zcount" exact="$InvasionSpreadTable.{$j}.$z" operation="add" />
                        </do_all>
                        <set_value name="$xaverage" exact="$xcount / $InvasionSpreadTable.keys.count" />
                        <set_value name="$yaverage" exact="$ycount / $InvasionSpreadTable.keys.count" />
                        <set_value name="$zaverage" exact="$zcount / $InvasionSpreadTable.keys.count" />
                        <set_value name="$midpointx" exact="(event.param.zone.position.x + $xaverage) / 2" />
                        <set_value name="$midpointy" exact="(event.param.zone.position.y + $yaverage) / 2" />
                        <set_value name="$midpointz" exact="(event.param.zone.position.z + $zaverage) / 2" />
                        <create_position name="$Median" x="$xaverage" y="$yaverage" z="$zaverage" />
                        <create_position name="$SpreadPoint" x="$midpointx" y="$midpointy" z="$midpointz" />
                        <debug_to_file text="'xcount ' + $xcount" name="'startpread.log'" />
                        <debug_to_file text="'ycount ' + $ycount" name="'startpread.log'" />
                        <debug_to_file text="'zcount ' + $zcount" name="'startpread.log'" />
                        <debug_to_file text="'xaverage ' + $xaverage" name="'startpread.log'" />
                        <debug_to_file text="'yaverage ' + $yaverage" name="'startpread.log'" />
                        <debug_to_file text="'zaverage ' + $zaverage" name="'startpread.log'" />
                        <debug_to_file text="'InvasionSpreadTable ' + $InvasionSpreadTable" name="'startpread.log'" />
                        <warp object="player.ship" sector="$testsector">
                            <position x="$xaverage" y="$yaverage" z="$zaverage" />
                        </warp>
                    </actions>
                    <cues>
                        <cue name="SpreadTakeover" >
                            <delay exact="5min" />
                            <actions>
                                <set_value name="$SpreadDistance" exact="5km" operation="add" />
                                <do_all exact="$InvasionSpreadTable.keys.count" counter="$s">
                                    <do_if value="$InvasionSpreadTable.{$s}.$Station.distanceto.{$SpreadPoint} lt $SpreadDistance">
                                        <do_if value="$InvasionSpreadTable.{$s}.$Station.owner != faction.xenon">
                                            <set_value name="$StationtoXenon" exact="$InvasionSpreadTable.{$s}.$Station" />
                                            <set_owner object="$StationtoXenon" faction="faction.xenon" overridenpc="true" />
                                            <add_to_group groupname="$StationWeXenoned" object="$StationtoXenon" />
                                            <break />
                                        </do_if>
                                    </do_if>
                                </do_all>
                                <debug_to_file text="'$SpreadDistance ' + $SpreadDistance" name="'SpreadDistance.log'" />
                                <debug_to_file text="'player.age ' + player.age" name="'SpreadDistance.log'" />
                                <reset_cue cue="this" />
                            </actions>
                        </cue>
                    </cues>
                </cue>
                <!--    
*****************************************************************************************************************************************
**********************************************************AIOrders********************************************************
*****************************************************************************************************************************************
-->
                <cue name="StationDefenseTimer" instantiate="true" checkinterval="10min">
                    <actions>
                        <set_value name="$STDTimer" exact="1" operation="add" />
                        <do_if value="$STDTimer gt 2">
                            <set_value name="$STDTimer" exact="2" />
                        </do_if>
                        <do_if value="$STDTimer == 0">
                            <cancel_cue cue="StationAttackedEvent" />
                        </do_if>
                    </actions>
                    <cues>
                        <cue name="StationAttackedEvent">
                            <conditions>
                                <event_object_attacked group="$XenonAssets" />
                            </conditions>
                            <actions>
                                <set_value name="$STDTimer" exact="1" operation="subtract" />
                                <do_all exact="$TeleportationBeacons.count" counter="$beacon">
                                    <do_if value="$TeleportationBeacons.{$beacons}.sector == event.object.sector">
                                        <set_value name="$SectorToDefend" exact="$TeleportationBeacons.{$beacons}" />
                                        <do_all exact="$FleetTable.keys.count" counter="$key">
                                            <do_if value="$FleetTable.{$key}.$Active == true">
                                                <do_if value="$FleetTable.{$key}.$Patrol == true">
                                                    <do_all exact="$FleetTable.{$key}.count" counter="$warpme">
                                                        <warp object="$FleetTable.{$key}.$FleetShips.{$warpme}" zone="$SectorToDefend.zone">
                                                            <safepos min="3km" max="5km" />
                                                        </warp>
                                                    </do_all>
                                                    <cancel_all_orders object="$FleetTable.{$key}.$Leader" />
                                                    <create_order id="'Patrol'" object="$FleetTable.{$key}.$Leader" default="true">
                                                        <param name="space" value="event.object.zone" />
                                                        <param name="includeroute" value="true" />
                                                        <param name="allowothertargets" value="true" />
                                                        <param name="pursuetargets" value="true" />
                                                    </create_order>
                                                    <break />
                                                </do_if>
                                            </do_if>
                                        </do_all>
                                    </do_if>
                                </do_all>
                            </actions>
                        </cue>
                    </cues>
                </cue>
                <cue name="StationDestroyedTimer" instantiate="true" checkinterval="10min">
                    <actions>
                        <set_value name="$XStationDestroyed" exact="1" operation="add" />
                        <do_if value="$XStationDestroyed gt 2">
                            <set_value name="$XStationDestroyed" exact="2" />
                        </do_if>
                        <do_if value="$XStationDestroyed == 0">
                            <cancel_cue cue="StationDestroyedEvent" />
                        </do_if>
                    </actions>
                    <cues>
                        <cue name="StationDestroyedEvent">
                            <conditions>
                                <event_object_destroyed group="$XenonAssets" />
                            </conditions>
                            <actions>
                                <set_value name="$XStationDestroyed" exact="1" operation="subtract" />
                                <do_all exact="$TeleportationBeacons.count" counter="$beacon">
                                    <do_if value="$TeleportationBeacons.{$beacons}.sector == event.object.sector">
                                        <set_value name="$SectorToDefend" exact="$TeleportationBeacons.{$beacons}" />
                                        <do_all exact="$FleetTable.keys.count" counter="$key">
                                            <do_if value="$FleetTable.{$key}.$Active == true">
                                                <do_if value="$FleetTable.{$key}.$Patrol == true">
                                                    <do_all exact="$FleetTable.{$key}.count" counter="$warpme">
                                                        <warp object="$FleetTable.{$key}.$FleetShips.{$warpme}" zone="$SectorToDefend.zone">
                                                            <safepos min="3km" max="5km" />
                                                        </warp>
                                                    </do_all>
                                                    <cancel_all_orders object="$FleetTable.{$key}.$Leader" />
                                                    <create_order id="'Patrol'" object="$FleetTable.{$key}.$Leader" default="true">
                                                        <param name="space" value="event.object.sector" />
                                                        <param name="includeroute" value="true" />
                                                        <param name="allowothertargets" value="true" />
                                                        <param name="pursuetargets" value="true" />
                                                    </create_order>
                                                    <break />
                                                </do_if>
                                            </do_if>
                                        </do_all>
                                    </do_if>
                                </do_all>
                            </actions>
                        </cue>
                    </cues>
                </cue>
                <cue name="FleetHop_Signaller" instantiate="true">
                    <conditions>
                        <event_cue_signalled />
                    </conditions>
                    <delay exact="6s" />
                    <actions>
                        <signal_cue_instantly cue="FleetHop_Spawn" />
                    </actions>
                </cue>
                <cue name="FleetHop_Spawn" instantiate="true">
                    <conditions>
                        <event_cue_signalled />
                    </conditions>
                    <actions>
                        <set_value name="$FactionSelected" exact="faction.xenon" />
                        <set_value name="$Owner" exact="faction.xenon" />
                        <set_value name="$FighterWeight" exact="50" />
                        <set_value name="$MWeight" exact="10" />
                        <set_value name="$UWeight" exact="2" />
                        <set_value name="$DWeight" exact="4" />
                        <set_value name="$CWeight" exact="1" />
                        <do_any>
                            <set_value name="$TagSelected" weight="1 + $FighterWeight" exact="tag.fighter" />
                            <set_value name="$TagSelected" weight="1 + $FighterWeight" exact="tag.fighter" />
                            <set_value name="$TagSelected" weight="1 + $FighterWeight" exact="tag.fighter" />
                            <set_value name="$TagSelected" weight="1 + $FighterWeight" exact="tag.fighter" />
                            <set_value name="$TagSelected" weight="1 + $MWeight" exact="tag.medium" />
                            <set_value name="$TagSelected" weight="1 + $UWeight" exact="tag.miner" />
                            <set_value name="$TagSelected" weight="1 + $DWeight" exact="tag.destroyer" />
                            <set_value name="$TagSelected" weight="1 + $CWeight" exact="tag.carrier" />
                        </do_any>
                        <include_actions ref="Create_Ship" />
                        <do_if value="$HowManyToSpawn gt 0">
                            <signal_cue_instantly cue="FleetHop_Signaller" />
                        </do_if>
                        <do_if value="$HowManyToSpawn lt 1">
                            <include_actions ref="SpawnFleet" />
                        </do_if>
                    </actions>
                </cue>
                <cue name="PlayerAttack_Signaller" instantiate="true">
                    <conditions>
                        <event_cue_signalled />
                    </conditions>
                    <delay exact="6s" />
                    <actions>
                        <signal_cue_instantly cue="PlayerAttack_Spawn" />
                    </actions>
                </cue>
                <cue name="PlayerAttack_Spawn" instantiate="true">
                    <conditions>
                        <event_cue_signalled />
                    </conditions>
                    <actions>
                        <set_value name="$FactionSelected" exact="faction.xenon" />
                        <set_value name="$Owner" exact="faction.xenon" />
                        <set_value name="$FighterWeight" exact="50" />
                        <set_value name="$MWeight" exact="10" />
                        <set_value name="$UWeight" exact="2" />
                        <set_value name="$DWeight" exact="4" />
                        <set_value name="$CWeight" exact="1" />
                        <do_any>
                            <set_value name="$TagSelected" weight="1 + $FighterWeight" exact="tag.fighter" />
                            <set_value name="$TagSelected" weight="1 + $FighterWeight" exact="tag.fighter" />
                            <set_value name="$TagSelected" weight="1 + $FighterWeight" exact="tag.fighter" />
                            <set_value name="$TagSelected" weight="1 + $FighterWeight" exact="tag.fighter" />
                            <set_value name="$TagSelected" weight="1 + $MWeight" exact="tag.medium" />
                            <set_value name="$TagSelected" weight="1 + $UWeight" exact="tag.miner" />
                            <set_value name="$TagSelected" weight="1 + $DWeight" exact="tag.destroyer" />
                            <set_value name="$TagSelected" weight="1 + $CWeight" exact="tag.carrier" />
                        </do_any>
                        <include_actions ref="Create_Ship" />
                        <do_if value="$HowManyToSpawn gt 0">
                            <signal_cue_instantly cue="PlayerAttack_Signaller" />
                        </do_if>
                        <do_if value="$HowManyToSpawn lt 1">
                            <include_actions ref="SpawnFleet" />
                        </do_if>
                    </actions>
                </cue>
                <cue name="Invasion_Signaller" instantiate="true">
                    <conditions>
                        <event_cue_signalled />
                    </conditions>
                    <delay exact="6s" />
                    <actions>
                        <signal_cue_instantly cue="Invasion_Spawn" />
                    </actions>
                </cue>
                <cue name="Invasion_Spawn" instantiate="true">
                    <conditions>
                        <event_cue_signalled />
                    </conditions>
                    <actions>
                        <set_value name="$FactionSelected" exact="faction.xenon" />
                        <set_value name="$Owner" exact="faction.xenon" />
                        <set_value name="$FighterWeight" exact="50" />
                        <set_value name="$MWeight" exact="10" />
                        <set_value name="$UWeight" exact="2" />
                        <set_value name="$DWeight" exact="4" />
                        <set_value name="$CWeight" exact="1" />
                        <do_any>
                            <set_value name="$TagSelected" weight="1 + $FighterWeight" exact="tag.fighter" />
                            <set_value name="$TagSelected" weight="1 + $FighterWeight" exact="tag.fighter" />
                            <set_value name="$TagSelected" weight="1 + $FighterWeight" exact="tag.fighter" />
                            <set_value name="$TagSelected" weight="1 + $FighterWeight" exact="tag.fighter" />
                            <set_value name="$TagSelected" weight="1 + $MWeight" exact="tag.medium" />
                            <set_value name="$TagSelected" weight="1 + $UWeight" exact="tag.miner" />
                            <set_value name="$TagSelected" weight="1 + $DWeight" exact="tag.destroyer" />
                            <set_value name="$TagSelected" weight="1 + $CWeight" exact="tag.carrier" />
                        </do_any>
                        <include_actions ref="Create_Ship" />
                        <do_if value="$HowManyToSpawn gt 0">
                            <signal_cue_instantly cue="Invasion_Signaller" />
                        </do_if>
                        <do_if value="$HowManyToSpawn lt 1">
                            <include_actions ref="SpawnFleet" />
                        </do_if>
                    </actions>
                </cue>
                <cue name="Patrol_Signaller" instantiate="true">
                    <conditions>
                        <event_cue_signalled />
                    </conditions>
                    <delay exact="6s" />
                    <actions>
                        <signal_cue_instantly cue="Patrol_Spawn" />
                    </actions>
                </cue>
                <cue name="Patrol_Spawn" instantiate="true">
                    <conditions>
                        <event_cue_signalled />
                    </conditions>
                    <actions>
                        <set_value name="$FactionSelected" exact="faction.xenon" />
                        <set_value name="$Owner" exact="faction.xenon" />
                        <set_value name="$FighterWeight" exact="50" />
                        <set_value name="$MWeight" exact="10" />
                        <set_value name="$UWeight" exact="2" />
                        <set_value name="$DWeight" exact="4" />
                        <set_value name="$CWeight" exact="1" />
                        <do_any>
                            <set_value name="$TagSelected" weight="1 + $FighterWeight" exact="tag.fighter" />
                            <set_value name="$TagSelected" weight="1 + $FighterWeight" exact="tag.fighter" />
                            <set_value name="$TagSelected" weight="1 + $FighterWeight" exact="tag.fighter" />
                            <set_value name="$TagSelected" weight="1 + $FighterWeight" exact="tag.fighter" />
                            <set_value name="$TagSelected" weight="1 + $MWeight" exact="tag.medium" />
                            <set_value name="$TagSelected" weight="1 + $UWeight" exact="tag.miner" />
                            <set_value name="$TagSelected" weight="1 + $DWeight" exact="tag.destroyer" />
                            <set_value name="$TagSelected" weight="1 + $CWeight" exact="tag.carrier" />
                        </do_any>
                        <include_actions ref="Create_Ship" />
                        <do_if value="$HowManyToSpawn gt 0">
                            <signal_cue_instantly cue="Patrol_Signaller" />
                        </do_if>
                        <do_if value="$HowManyToSpawn lt 1">
                            <include_actions ref="SpawnFleet" />
                        </do_if>
                    </actions>
                </cue>
                <cue name="PirateHop_Signaller" instantiate="true">
                    <conditions>
                        <event_cue_signalled />
                    </conditions>
                    <delay exact="6s" />
                    <actions>
                        <signal_cue_instantly cue="PirateHop_Spawn" />
                    </actions>
                </cue>
                <cue name="PirateHop_Spawn" instantiate="true">
                    <conditions>
                        <event_cue_signalled />
                    </conditions>
                    <actions>
                        <set_value name="$FactionSelected" exact="faction.xenon" />
                        <set_value name="$Owner" exact="faction.xenon" />
                        <set_value name="$FighterWeight" exact="50" />
                        <set_value name="$MWeight" exact="10" />
                        <set_value name="$UWeight" exact="2" />
                        <set_value name="$DWeight" exact="4" />
                        <set_value name="$CWeight" exact="1" />
                        <do_any>
                            <set_value name="$TagSelected" weight="1 + $FighterWeight" exact="tag.fighter" />
                            <set_value name="$TagSelected" weight="1 + $FighterWeight" exact="tag.fighter" />
                            <set_value name="$TagSelected" weight="1 + $FighterWeight" exact="tag.fighter" />
                            <set_value name="$TagSelected" weight="1 + $FighterWeight" exact="tag.fighter" />
                            <set_value name="$TagSelected" weight="1 + $MWeight" exact="tag.medium" />
                            <set_value name="$TagSelected" weight="1 + $UWeight" exact="tag.miner" />
                            <set_value name="$TagSelected" weight="1 + $DWeight" exact="tag.destroyer" />
                            <set_value name="$TagSelected" weight="1 + $CWeight" exact="tag.carrier" />
                        </do_any>
                        <include_actions ref="Create_Ship" />
                        <do_if value="$HowManyToSpawn gt 0">
                            <signal_cue_instantly cue="PirateHop_Signaller" />
                        </do_if>
                        <do_if value="$HowManyToSpawn lt 1">
                            <include_actions ref="SpawnFleet" />
                        </do_if>
                    </actions>
                </cue>
                <library name="SpawnFleet" >
                    <actions>
                        <do_if value="$PatrolActivated == true">
                            <include_actions ref="Leader_Select" />
                            <!-- <find_station groupname="$StationTargets" space="$TP_Sectors_FactionSpace.random" functional="true" multiple="true">
                                <match owner="faction.khaak" negate="true" />
                                <match_relation_to faction="$FactionSelected" comparison="le" relation="enemy" />
                            </find_station>
                            <set_value name="$StationTargeted" exact="$StationTargets.random" />
                            <do_all exact="$TeleportationBeacons.count" counter="$beacon">
                                <do_if value="$TeleportationBeacons.{$beacons}.sector == $StationTargeted.sector">
                                    <set_value name="$BeaconSelected" exact="$TeleportationBeacons.{$beacons}" />
                                </do_if>
                            </do_all> -->
                            <!-- <find_station groupname="$StationTargets" space="$TeleportationBeacons.random.sector" functional="true" multiple="true">
                                <match owner="faction.khaak" negate="true" />
                                <match_relation_to faction="$FactionSelected" comparison="le" relation="enemy" />
                            </find_station>
                            <set_value name="$StationTargeted" exact="$StationTargets.random" />
                            <do_all exact="$SpawnedShipGroup.count" counter="$warpme">
                                <warp object="$SpawnedShipGroup.{$warpme}" zone="$BeaconSelected.zone">
                                    <safepos min="3km" max="5km" />
                                </warp>
                            </do_all> -->
                            <find_station groupname="$StationTargets" space="$LeaderSelected.sector" functional="true" multiple="true">
                                <match owner="faction.khaak" negate="true" />
                                <match_relation_to faction="$FactionSelected" comparison="le" relation="enemy" />
                            </find_station>
                            <set_value name="$StationTargeted" exact="$StationTargets.random" />
                            <create_order id="'Patrol'" object="$LeaderSelected" default="true">
                                <param name="space" value="$StationTargeted.sector" />
                                <param name="includeroute" value="true" />
                                <param name="allowothertargets" value="true" />
                                <param name="pursuetargets" value="true" />
                            </create_order>
                            <set_value name="$NewEntry" exact="$FleetTable.keys.list.max + 1" />
                            <set_value name="$FleetTable.{$NewEntry}" exact="table[
                                    $Beacon = $BeaconSelected,
                                    $Active = true,
                                    $FleetHop = false,
                                    $PirateHop = false,
                                    $PlayerAttack = false,
                                    $Invasion = false,
                                    $Patrol = true,
                                    $Startime = player.age,
                                    $FleetShips = $SpawnedShipGroup,
                                    $Leader = $LeaderSelected,
                                    $AttackTarget = $EnemyObject
                                    ]" />
                            <clear_group group="$SpawnedShipGroup" />
                        </do_if>
                        <do_if value="$FleetHopActivated == true">
                            <include_actions ref="Leader_Select" />
                            <set_value name="$NewEntry" exact="$FleetTable.keys.list.max + 1" />
                            <set_value name="$FleetTable.{$NewEntry}" exact="table[
                                    $Beacon = $BeaconSelected,
                                    $Active = true,
                                    $FleetHop = true,
                                    $PirateHop = false,
                                    $PlayerAttack = false,
                                    $Invasion = false,
                                    $Patrol = false,
                                    $Startime = player.age,
                                    $FleetShips = $SpawnedShipGroup,
                                    $Leader = $LeaderSelected,
                                    $AttackTarget = $EnemyObject
                                    ]" />
                            <clear_group group="$SpawnedShipGroup" />
                        </do_if>
                        <do_if value="$PlayerAttackActivated == true">
                            <include_actions ref="Leader_Select" />
                            <set_value name="$NewEntry" exact="$FleetTable.keys.list.max + 1" />
                            <set_value name="$FleetTable.{$NewEntry}" exact="table[
                                    $Beacon = $BeaconSelected,
                                    $Active = true,
                                    $FleetHop = false,
                                    $PirateHop = false,
                                    $PlayerAttack = true,
                                    $Invasion = false,
                                    $Patrol = false,
                                    $Startime = player.age,
                                    $FleetShips = $SpawnedShipGroup,
                                    $Leader = $LeaderSelected,
                                    $AttackTarget = $EnemyObject
                                    ]" />
                            <clear_group group="$SpawnedShipGroup" />
                        </do_if>
                        <do_if value="$PirateHopActivated == true">
                            <include_actions ref="Leader_Select" />
                            <set_value name="$NewEntry" exact="$FleetTable.keys.list.max + 1" />
                            <set_value name="$FleetTable.{$NewEntry}" exact="table[
                                    $Beacon = $BeaconSelected,
                                    $Active = true,
                                    $FleetHop = false,
                                    $PirateHop = true,
                                    $PlayerAttack = false,
                                    $Invasion = false,
                                    $Patrol = false,
                                    $Startime = player.age,
                                    $FleetShips = $SpawnedShipGroup,
                                    $Leader = $LeaderSelected,
                                    $AttackTarget = $EnemyObject
                                    ]" />
                            <clear_group group="$SpawnedShipGroup" />
                        </do_if>
                        <do_if value="$InvasionActivated == true">
                            <include_actions ref="Leader_Select" />
                            <include_actions ref="InvasionStart" />
                            <include_actions ref="InvasionStation" />
                            <do_all exact="$SpawnedShipGroup.count" counter="$warpme">
                                <warp object="$SpawnedShipGroup.{$warpme}" zone="$InvasionShipYard.zone">
                                    <safepos min="3km" max="5km" />
                                </warp>
                            </do_all>
                            <create_order id="'Patrol'" object="$LeaderSelected" default="true">
                                <param name="space" value="$InvasionShipYard.sector" />
                                <param name="includeroute" value="true" />
                                <param name="allowothertargets" value="true" />
                                <param name="pursuetargets" value="true" />
                            </create_order>
                            <set_value name="$NewEntry" exact="$FleetTable.keys.list.max + 1" />
                            <set_value name="$FleetTable.{$NewEntry}" exact="table[
                                    $Beacon = $BeaconSelected,
                                    $Active = true,
                                    $FleetHop = false,
                                    $PirateHop = false,
                                    $PlayerAttack = false,
                                    $Invasion = true,
                                    $Patrol = false,
                                    $Startime = player.age,
                                    $FleetShips = $SpawnedShipGroup,
                                    $Leader = $LeaderSelected,
                                    $AttackTarget = $EnemyObject
                                    ]" />
                            <clear_group group="$SpawnedShipGroup" />
                        </do_if>
                        <do_all exact="$FleetTable.keys.count" counter="$key">
                            <add_to_group groupname="$FleetTargetGroup" object="$FleetTable.{$key}.$EnemyObject" />
                        </do_all>
                        <signal_cue_instantly cue="Start_Spread" param="$InvasionShipYard" />
                    </actions>
                </library>
                <library name="Create_Ship" >
                    <delay exact="6s" />
                    <actions>
                        <create_ship groupname="$SpawnedShipGroup" name="$SpawnedShip" zone="$BeaconSelected.zone">
                            <select faction="$FactionSelected" tags="[$TagSelected]" />
                            <loadout>
                                <level exact="1" />
                            </loadout>
                            <owner exact="$Owner" overridenpc="true" />
                            <safepos min="1km" max="4km" />
                        </create_ship>
                        <set_value name="$HowManyToSpawn" exact="1" operation="subtract" />
                        <set_owner object="$SpawnedShip" faction="faction.player" overridenpc="true" />
                    </actions>
                </library>
                <library name="Leader_Select">
                    <actions>
                        <set_value name="$MediumSearchComplete" exact="false" />
                        <set_value name="$SearchComplete" exact="false" />
                        <set_value name="$LargeSearchComplete" exact="false" />
                        <do_all exact="$SpawnedShipGroup.count" counter="$current">
                            <do_if value="$SearchComplete == false">
                                <do_if value="$SpawnedShipGroup.{$current}.isclass.[class.ship_xl]">
                                    <set_value name="$SearchComplete" exact="true" />
                                    <set_value name="$LeaderSelected" exact="$SpawnedShipGroup.{$current}" />
                                </do_if>
                                <do_if value="$SpawnedShipGroup.{$current}.isclass.[class.ship_l]">
                                    <set_value name="$LargeSearchComplete" exact="true" />
                                    <set_value name="$LeaderSelected" exact="$SpawnedShipGroup.{$current}" />
                                </do_if>
                                <do_if value="$LargeSearchComplete == false">
                                    <do_if value="$SpawnedShipGroup.{$current}.isclass.[class.ship_m]">
                                        <set_value name="$MediumSearchComplete" exact="true" />
                                        <set_value name="$LeaderSelected" exact="$SpawnedShipGroup.{$current}" />
                                    </do_if>
                                    <do_if value="$MediumSearchComplete == false">
                                        <do_if value="$SpawnedShipGroup.{$current}.isclass.[class.ship_s]">
                                            <set_value name="$LeaderSelected" exact="$SpawnedShipGroup.{$current}" />
                                        </do_if>
                                    </do_if>
                                </do_if>
                            </do_if>
                        </do_all>
                        <do_all exact="$SpawnedShipGroup.count" counter="$follower">
                            <set_object_commander object="$SpawnedShipGroup.{$follower}" commander="$LeaderSelected" />
                            <create_order id="'Escort'" object="$SpawnedShipGroup.{$follower}" default="true">
                                <param name="target" value="$LeaderSelected" />
                                <param name="formation" value="formationshape.pointguard" />
                                <param name="formationparam" value="200m" />
                                <param name="overrideformationskill" value="true" />
                            </create_order>
                        </do_all>
                        <set_value name="$MediumSearchComplete" exact="false" />
                        <set_value name="$SearchComplete" exact="false" />
                        <set_value name="$LargeSearchComplete" exact="false" />
                    </actions>
                </library>
                <library name="InvasionStart">
                    <actions>
                        <do_all exact="$TP_Sectors.count" counter="$sector">
                            <do_if value="$TP_Sectors.{$sector}.owner == faction.xenon">
                                <get_jump_path start="$TP_Sectors.{$sector}" end="$TP_Sectors_FactionSpace.random" multiple="true" component="$path" />
                                <do_if value="$path.{1} != null">
                                    <break />
                                </do_if>
                            </do_if>
                        </do_all>
                        <do_all exact="$path.count" counter="$step">
                            <do_if value="$path.{$step}.sector.owner != faction.xenon">
                                <set_value name="$InvasionSector" exact="$path.{$step}.sector" />
                                <break />
                            </do_if>
                            <debug_to_file text="'$path.{$step}.sector ' + $path.{$step}.sector.knownname" name="'invasionstart.log'" />
                            <debug_to_file text="'$path.{$step} ' + $path.{$step}" name="'invasionstart.log'" />
                        </do_all>
                        <debug_to_file text="'$path ' + $path" name="'invasionstart.log'" />
                    </actions>
                </library>
                <library name="InvasionStation">
                    <actions>
                        <create_station groupname="$InvasionStationsGroup" name="$InvasionShipYard" macro="macro.station_xen_shipyard_base_01_macro" sector="$InvasionSector" constructionplan="'xen_shipyard'" owner="faction.xenon" state="componentstate.operational">
                            <safepos min="200km" max="400km" />
                        </create_station>
                        <debug_to_file text="'InvasionShipYard ' + $InvasionShipYard" name="'InvasionStation.log'" />
                    </actions>
                </library>
            </cues>
        </cue>
    </cues>
</mdscript>